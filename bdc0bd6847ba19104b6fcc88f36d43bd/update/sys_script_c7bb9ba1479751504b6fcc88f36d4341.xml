<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_880077_crossplan_crs_jobqueue</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>CRS_JobProcessing</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	if (current.state=="Processing"){
		try {
			if (current.topic == "Write CatItem"){
				this.addCatItemtoCRSDB_CatItem(current);				
			}
			else if (current.topic == "Create CatItem"){
				this.createCatItemJOB(current);	
			}
			current.state == "Completed";
		}
		catch(err) {
			CRSLog.debug("Error CRS_JobProcessing Business Rule " + err);
			if (current.retry >= gs.getProperty("x_880077_crossplan.JobRetryCount")){
				current.state = "Error";	
			}
			else{
				current.state = "Ready";
				current.retry += 1; 
			}
		}
		current.update();
	}

})(current, previous);

function createCatItemJOB(current) {
	CRSLog.debug("Run -> createCatItem JOB");
	
	var catItems = new GlideRecord("x_880077_crossplan_crsdb_catitem");
	catItems.query("name",current.body);
	catItems.next();	
	var catalogItemID = createCatItem(catItems);
	if(catalogItemID){
		CRSLog.debug("Completed -> Catalog_Item_Script.create");
		current.state = "Completed";
	}
	else {
		current.state = "Failed";
	}
	
}

function createCatItem(catItems) {
	var catalogItem = new sn_sc.CatItem();
	var scope = gs.getProperty('x_880077_crossplan.scope_id');
    var attributes = {
        "name": catItems.name,
		"sys_scope": scope,
    };	
	if (catItems.descriptions) attributes["description"] = catItems.descriptions;	
	if (catItems.short_description) attributes["short_description"] = catItems.short_description;	
	if (catItems.price) attributes["price"] = catItems.price;	
	catalogItem.setAttributes(attributes);
	catalogItem.setCatalogs(catItems.catalogs);
	catalogItem.setCategories(catItems.category);
    var catalogItemID = catalogItem.create();
	return catalogItemID;
}

function addCatItemtoCRSDB_CatItem(current) {	
	var catalogID = gs.getProperty('x_880077_crossplan.main_category_title');
				var provider_name = "";
				var apiversion = "";
				var CRD_item = JSON.parse(current.body);
				var providerIsExist = false;
				for (j in CRD_item["metadata"]["ownerReferences"]){
					var CRD_item_ref = CRD_item["metadata"]["ownerReferences"][j];
					if (CRD_item_ref["kind"] == "Provider"){				
						provider_name = CRD_item_ref["name"];	
						apiversion = CRD_item_ref["apiVersion"];	
						providerIsExist = true;
						break;
					}			
				}						
				if(providerIsExist == true){
					var catItem = new GlideRecord("x_880077_crossplan_crsdb_catitem");
					var providerID = CRSDB_Category.getIDByName(provider_name) + "";				
					var serviceCatalogID = gs.getProperty('x_880077_crossplan.serviceCatalogID');
					catItem.initialize();					
					catItem.short_description = CRD_item["metadata"]["name"] + "  " + apiversion;
					catItem.name = CRD_item["spec"]["names"]["singular"] + " ---> " + CRD_item["spec"]["group"].split(".")[0];
					catItem.type = "CRD_CatItem";
					catItem.group = CRD_item["spec"]["group"];
					catItem.status = "Waiting For Create";
					catItem.catalogs = serviceCatalogID;
					catItem.category = providerID;
					catItem.type = "provider";		
					catItem.insert();	
					current.state = "Completed";
				}
				else{
					current.state = "Not a Provider";
					current.update();
					current.deleteRecord();
				}
}


]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-11-21 13:11:43</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c7bb9ba1479751504b6fcc88f36d4341</sys_id>
        <sys_name>CRS_JobProcessing</sys_name>
        <sys_overrides/>
        <sys_package display_value="CrossplaneV2" source="x_880077_crossplan">bdc0bd6847ba19104b6fcc88f36d43bd</sys_package>
        <sys_policy/>
        <sys_scope display_value="CrossplaneV2">bdc0bd6847ba19104b6fcc88f36d43bd</sys_scope>
        <sys_update_name>sys_script_c7bb9ba1479751504b6fcc88f36d4341</sys_update_name>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=c7bb9ba1479751504b6fcc88f36d4341"/>
</record_update>

<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties">
    <sys_properties action="INSERT_OR_UPDATE">
        <choices/>
        <description/>
        <ignore_cache>true</ignore_cache>
        <is_private>false</is_private>
        <name>x_880077_crossplan.json2</name>
        <read_roles/>
        <suffix>json2</suffix>
        <sys_class_name>sys_properties</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-03-01 15:17:07</sys_created_on>
        <sys_id>9df7fab1975121108ba1bde3f153afd3</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>x_880077_crossplan.json2</sys_name>
        <sys_package display_value="CrossplaneV2" source="x_880077_crossplan">bdc0bd6847ba19104b6fcc88f36d43bd</sys_package>
        <sys_policy/>
        <sys_scope display_value="CrossplaneV2">bdc0bd6847ba19104b6fcc88f36d43bd</sys_scope>
        <sys_update_name>sys_properties_9df7fab1975121108ba1bde3f153afd3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-19 14:12:43</sys_updated_on>
        <type>string</type>
        <value>{&#13;
    "kind": "CustomResourceDefinitionList",&#13;
    "apiVersion": "apiextensions.k8s.io/v1",&#13;
    "metadata": {&#13;
        "resourceVersion": "20260940"&#13;
    },&#13;
    "items": [&#13;
        {&#13;
            "metadata": {&#13;
                "name": "accesskeys.iam.aws.crossplane.io",&#13;
                "uid": "6167af55-aa89-42bf-b77c-07845498f72f",&#13;
                "resourceVersion": "12379",&#13;
                "generation": 1,&#13;
                "creationTimestamp": "2023-03-24T15:44:03Z",&#13;
                "annotations": {&#13;
                    "controller-gen.kubebuilder.io/version": "v0.8.0"&#13;
                },&#13;
                "ownerReferences": [&#13;
                    {&#13;
                        "apiVersion": "pkg.crossplane.io/v1",&#13;
                        "kind": "ProviderRevision",&#13;
                        "name": "crossplane-provider-aws-245ce7fb587d",&#13;
                        "uid": "1b69d3a2-2bd9-478e-926c-9774633c918c",&#13;
                        "controller": true,&#13;
                        "blockOwnerDeletion": true&#13;
                    },&#13;
                    {&#13;
                        "apiVersion": "pkg.crossplane.io/v1",&#13;
                        "kind": "Provider",&#13;
                        "name": "crossplane-provider-aws",&#13;
                        "uid": "f9d15608-59ff-498c-a393-01ef8688eb40",&#13;
                        "controller": false,&#13;
                        "blockOwnerDeletion": true&#13;
                    }&#13;
                ],&#13;
                "managedFields": [&#13;
                    {&#13;
                        "manager": "crossplane",&#13;
                        "operation": "Update",&#13;
                        "apiVersion": "apiextensions.k8s.io/v1",&#13;
                        "time": "2023-03-24T15:43:56Z",&#13;
                        "fieldsType": "FieldsV1",&#13;
                        "fieldsV1": {&#13;
                            "f:metadata": {&#13;
                                "f:annotations": {&#13;
                                    ".": {},&#13;
                                    "f:controller-gen.kubebuilder.io/version": {}&#13;
                                },&#13;
                                "f:ownerReferences": {&#13;
                                    ".": {},&#13;
                                    "k:{\"uid\":\"1b69d3a2-2bd9-478e-926c-9774633c918c\"}": {},&#13;
                                    "k:{\"uid\":\"f9d15608-59ff-498c-a393-01ef8688eb40\"}": {}&#13;
                                }&#13;
                            },&#13;
                            "f:spec": {&#13;
                                "f:conversion": {&#13;
                                    ".": {},&#13;
                                    "f:strategy": {}&#13;
                                },&#13;
                                "f:group": {},&#13;
                                "f:names": {&#13;
                                    "f:categories": {},&#13;
                                    "f:kind": {},&#13;
                                    "f:listKind": {},&#13;
                                    "f:plural": {},&#13;
                                    "f:singular": {}&#13;
                                },&#13;
                                "f:scope": {},&#13;
                                "f:versions": {}&#13;
                            }&#13;
                        }&#13;
                    },&#13;
                    {&#13;
                        "manager": "kube-apiserver",&#13;
                        "operation": "Update",&#13;
                        "apiVersion": "apiextensions.k8s.io/v1",&#13;
                        "time": "2023-03-24T15:44:28Z",&#13;
                        "fieldsType": "FieldsV1",&#13;
                        "fieldsV1": {&#13;
                            "f:status": {&#13;
                                "f:acceptedNames": {&#13;
                                    "f:categories": {},&#13;
                                    "f:kind": {},&#13;
                                    "f:listKind": {},&#13;
                                    "f:plural": {},&#13;
                                    "f:singular": {}&#13;
                                },&#13;
                                "f:conditions": {&#13;
                                    "k:{\"type\":\"Established\"}": {&#13;
                                        ".": {},&#13;
                                        "f:lastTransitionTime": {},&#13;
                                        "f:message": {},&#13;
                                        "f:reason": {},&#13;
                                        "f:status": {},&#13;
                                        "f:type": {}&#13;
                                    },&#13;
                                    "k:{\"type\":\"NamesAccepted\"}": {&#13;
                                        ".": {},&#13;
                                        "f:lastTransitionTime": {},&#13;
                                        "f:message": {},&#13;
                                        "f:reason": {},&#13;
                                        "f:status": {},&#13;
                                        "f:type": {}&#13;
                                    }&#13;
                                }&#13;
                            }&#13;
                        },&#13;
                        "subresource": "status"&#13;
                    }&#13;
                ]&#13;
            },&#13;
            "spec": {&#13;
                "group": "iam.aws.crossplane.io",&#13;
                "names": {&#13;
                    "plural": "accesskeys",&#13;
                    "singular": "accesskey",&#13;
                    "kind": "AccessKey",&#13;
                    "listKind": "AccessKeyList",&#13;
                    "categories": [&#13;
                        "crossplane",&#13;
                        "managed",&#13;
                        "aws"&#13;
                    ]&#13;
                },&#13;
                "scope": "Cluster",&#13;
                "versions": [&#13;
                    {&#13;
                        "name": "v1beta1",&#13;
                        "served": true,&#13;
                        "storage": true,&#13;
                        "schema": {&#13;
                            "openAPIV3Schema": {&#13;
                                "description": "An AccessKey is a managed resource that represents an the Access Key for an AWS IAM User.",&#13;
                                "type": "object",&#13;
                                "required": [&#13;
                                    "spec"&#13;
                                ],&#13;
                                "properties": {&#13;
                                    "apiVersion": {&#13;
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",&#13;
                                        "type": "string"&#13;
                                    },&#13;
                                    "kind": {&#13;
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",&#13;
                                        "type": "string"&#13;
                                    },&#13;
                                    "metadata": {&#13;
                                        "type": "object"&#13;
                                    },&#13;
                                    "spec": {&#13;
                                        "description": "An AccessKeySpec defines the desired state of an IAM Access Key.",&#13;
                                        "type": "object",&#13;
                                        "required": [&#13;
                                            "forProvider"&#13;
                                        ],&#13;
                                        "properties": {&#13;
                                            "deletionPolicy": {&#13;
                                                "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource.",&#13;
                                                "type": "string",&#13;
                                                "default": "Delete",&#13;
                                                "enum": [&#13;
                                                    "Orphan",&#13;
                                                    "Delete"&#13;
                                                ]&#13;
                                            },&#13;
                                            "forProvider": {&#13;
                                                "description": "AccessKeyParameters define the desired state of an AWS IAM Access Key.",&#13;
                                                "type": "object",&#13;
                                                "properties": {&#13;
                                                    "accessKeyStatus": {&#13;
                                                        "description": "The current status of this AccessKey on the AWS Must be either Active or Inactive.",&#13;
                                                        "type": "string",&#13;
                                                        "enum": [&#13;
                                                            "Active",&#13;
                                                            "Inactive"&#13;
                                                        ]&#13;
                                                    },&#13;
                                                    "userName": {&#13;
                                                        "description": "Username contains the name of the User.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "userNameRef": {&#13;
                                                        "description": "UsernameRef references to an User to retrieve its userName",&#13;
                                                        "type": "object",&#13;
                                                        "required": [&#13;
                                                            "name"&#13;
                                                        ],&#13;
                                                        "properties": {&#13;
                                                            "name": {&#13;
                                                                "description": "Name of the referenced object.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "policy": {&#13;
                                                                "description": "Policies for referencing.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "resolution": {&#13;
                                                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                        "type": "string",&#13;
                                                                        "default": "Required",&#13;
                                                                        "enum": [&#13;
                                                                            "Required",&#13;
                                                                            "Optional"&#13;
                                                                        ]&#13;
                                                                    },&#13;
                                                                    "resolve": {&#13;
                                                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                        "type": "string",&#13;
                                                                        "enum": [&#13;
                                                                            "Always",&#13;
                                                                            "IfNotPresent"&#13;
                                                                        ]&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "userNameSelector": {&#13;
                                                        "description": "UsernameSelector selects a reference to an User to retrieve its userName",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "matchControllerRef": {&#13;
                                                                "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",&#13;
                                                                "type": "boolean"&#13;
                                                            },&#13;
                                                            "matchLabels": {&#13;
                                                                "description": "MatchLabels ensures an object with matching labels is selected.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "policy": {&#13;
                                                                "description": "Policies for selection.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "resolution": {&#13;
                                                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                        "type": "string",&#13;
                                                                        "default": "Required",&#13;
                                                                        "enum": [&#13;
                                                                            "Required",&#13;
                                                                            "Optional"&#13;
                                                                        ]&#13;
                                                                    },&#13;
                                                                    "resolve": {&#13;
                                                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                        "type": "string",&#13;
                                                                        "enum": [&#13;
                                                                            "Always",&#13;
                                                                            "IfNotPresent"&#13;
                                                                        ]&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "providerConfigRef": {&#13;
                                                "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",&#13;
                                                "type": "object",&#13;
                                                "default": {&#13;
                                                    "name": "default"&#13;
                                                },&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the referenced object.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "policy": {&#13;
                                                        "description": "Policies for referencing.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "resolution": {&#13;
                                                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                "type": "string",&#13;
                                                                "default": "Required",&#13;
                                                                "enum": [&#13;
                                                                    "Required",&#13;
                                                                    "Optional"&#13;
                                                                ]&#13;
                                                            },&#13;
                                                            "resolve": {&#13;
                                                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                "type": "string",&#13;
                                                                "enum": [&#13;
                                                                    "Always",&#13;
                                                                    "IfNotPresent"&#13;
                                                                ]&#13;
                                                            }&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "providerRef": {&#13;
                                                "description": "ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the referenced object.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "policy": {&#13;
                                                        "description": "Policies for referencing.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "resolution": {&#13;
                                                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                "type": "string",&#13;
                                                                "default": "Required",&#13;
                                                                "enum": [&#13;
                                                                    "Required",&#13;
                                                                    "Optional"&#13;
                                                                ]&#13;
                                                            },&#13;
                                                            "resolve": {&#13;
                                                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                "type": "string",&#13;
                                                                "enum": [&#13;
                                                                    "Always",&#13;
                                                                    "IfNotPresent"&#13;
                                                                ]&#13;
                                                            }&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "publishConnectionDetailsTo": {&#13;
                                                "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "configRef": {&#13;
                                                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",&#13;
                                                        "type": "object",&#13;
                                                        "default": {&#13;
                                                            "name": "default"&#13;
                                                        },&#13;
                                                        "required": [&#13;
                                                            "name"&#13;
                                                        ],&#13;
                                                        "properties": {&#13;
                                                            "name": {&#13;
                                                                "description": "Name of the referenced object.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "policy": {&#13;
                                                                "description": "Policies for referencing.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "resolution": {&#13;
                                                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                        "type": "string",&#13;
                                                                        "default": "Required",&#13;
                                                                        "enum": [&#13;
                                                                            "Required",&#13;
                                                                            "Optional"&#13;
                                                                        ]&#13;
                                                                    },&#13;
                                                                    "resolve": {&#13;
                                                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                        "type": "string",&#13;
                                                                        "enum": [&#13;
                                                                            "Always",&#13;
                                                                            "IfNotPresent"&#13;
                                                                        ]&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "metadata": {&#13;
                                                        "description": "Metadata is the metadata for connection secret.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "annotations": {&#13;
                                                                "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "labels": {&#13;
                                                                "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "type": {&#13;
                                                                "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",&#13;
                                                                "type": "string"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "name": {&#13;
                                                        "description": "Name is the name of the connection secret.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "writeConnectionSecretToRef": {&#13;
                                                "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name",&#13;
                                                    "namespace"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the secret.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "namespace": {&#13;
                                                        "description": "Namespace of the secret.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            }&#13;
                                        }&#13;
                                    },&#13;
                                    "status": {&#13;
                                        "description": "AccessKeyStatus represents the observed state of an IAM Access Key.",&#13;
                                        "type": "object",&#13;
                                        "properties": {&#13;
                                            "conditions": {&#13;
                                                "description": "Conditions of the resource.",&#13;
                                                "type": "array",&#13;
                                                "items": {&#13;
                                                    "description": "A Condition that may apply to a resource.",&#13;
                                                    "type": "object",&#13;
                                                    "required": [&#13;
                                                        "lastTransitionTime",&#13;
                                                        "reason",&#13;
                                                        "status",&#13;
                                                        "type"&#13;
                                                    ],&#13;
                                                    "properties": {&#13;
                                                        "lastTransitionTime": {&#13;
                                                            "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",&#13;
                                                            "type": "string",&#13;
                                                            "format": "date-time"&#13;
                                                        },&#13;
                                                        "message": {&#13;
                                                            "description": "A Message containing details about this condition's last transition from one status to another, if any.",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "reason": {&#13;
                                                            "description": "A Reason for this condition's last transition from one status to another.",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "status": {&#13;
                                                            "description": "Status of this condition; is it currently True, False, or Unknown?",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "type": {&#13;
                                                            "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",&#13;
                                                            "type": "string"&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            }&#13;
                                        }&#13;
                                    }&#13;
                                }&#13;
                            }&#13;
                        },&#13;
                        "subresources": {&#13;
                            "status": {}&#13;
                        },&#13;
                        "additionalPrinterColumns": [&#13;
                            {&#13;
                                "name": "READY",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".status.conditions[?(@.type=='Ready')].status"&#13;
                            },&#13;
                            {&#13;
                                "name": "SYNCED",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".status.conditions[?(@.type=='Synced')].status"&#13;
                            },&#13;
                            {&#13;
                                "name": "AGE",&#13;
                                "type": "date",&#13;
                                "jsonPath": ".metadata.creationTimestamp"&#13;
                            },&#13;
                            {&#13;
                                "name": "STATUS",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".spec.forProvider.accessKeyStatus"&#13;
                            }&#13;
                        ]&#13;
                    }&#13;
                ],&#13;
                "conversion": {&#13;
                    "strategy": "None"&#13;
                }&#13;
            },&#13;
            "status": {&#13;
                "conditions": [&#13;
                    {&#13;
                        "type": "NamesAccepted",&#13;
                        "status": "True",&#13;
                        "lastTransitionTime": "2023-03-24T15:44:28Z",&#13;
                        "reason": "NoConflicts",&#13;
                        "message": "no conflicts found"&#13;
                    },&#13;
                    {&#13;
                        "type": "Established",&#13;
                        "status": "True",&#13;
                        "lastTransitionTime": "2023-03-24T15:44:32Z",&#13;
                        "reason": "InitialNamesAccepted",&#13;
                        "message": "the initial names have been accepted"&#13;
                    }&#13;
                ],&#13;
                "acceptedNames": {&#13;
                    "plural": "accesskeys",&#13;
                    "singular": "accesskey",&#13;
                    "kind": "AccessKey",&#13;
                    "listKind": "AccessKeyList",&#13;
                    "categories": [&#13;
                        "crossplane",&#13;
                        "managed",&#13;
                        "aws"&#13;
                    ]&#13;
                },&#13;
                "storedVersions": [&#13;
                    "v1beta1"&#13;
                ]&#13;
            }&#13;
        },&#13;
        {&#13;
            "metadata": {&#13;
                "name": "accesspoints.efs.aws.crossplane.io",&#13;
                "uid": "fe6e7e47-0b89-40c7-84b4-5615fdacd405",&#13;
                "resourceVersion": "12315",&#13;
                "generation": 1,&#13;
                "creationTimestamp": "2023-03-24T15:44:01Z",&#13;
                "annotations": {&#13;
                    "controller-gen.kubebuilder.io/version": "v0.8.0"&#13;
                },&#13;
                "ownerReferences": [&#13;
                    {&#13;
                        "apiVersion": "pkg.crossplane.io/v1",&#13;
                        "kind": "ProviderRevision",&#13;
                        "name": "crossplane-provider-aws-245ce7fb587d",&#13;
                        "uid": "1b69d3a2-2bd9-478e-926c-9774633c918c",&#13;
                        "controller": true,&#13;
                        "blockOwnerDeletion": true&#13;
                    },&#13;
                    {&#13;
                        "apiVersion": "pkg.crossplane.io/v1",&#13;
                        "kind": "Provider",&#13;
                        "name": "crossplane-provider-aws",&#13;
                        "uid": "f9d15608-59ff-498c-a393-01ef8688eb40",&#13;
                        "controller": false,&#13;
                        "blockOwnerDeletion": true&#13;
                    }&#13;
                ],&#13;
                "managedFields": [&#13;
                    {&#13;
                        "manager": "crossplane",&#13;
                        "operation": "Update",&#13;
                        "apiVersion": "apiextensions.k8s.io/v1",&#13;
                        "time": "2023-03-24T15:43:55Z",&#13;
                        "fieldsType": "FieldsV1",&#13;
                        "fieldsV1": {&#13;
                            "f:metadata": {&#13;
                                "f:annotations": {&#13;
                                    ".": {},&#13;
                                    "f:controller-gen.kubebuilder.io/version": {}&#13;
                                },&#13;
                                "f:ownerReferences": {&#13;
                                    ".": {},&#13;
                                    "k:{\"uid\":\"1b69d3a2-2bd9-478e-926c-9774633c918c\"}": {},&#13;
                                    "k:{\"uid\":\"f9d15608-59ff-498c-a393-01ef8688eb40\"}": {}&#13;
                                }&#13;
                            },&#13;
                            "f:spec": {&#13;
                                "f:conversion": {&#13;
                                    ".": {},&#13;
                                    "f:strategy": {}&#13;
                                },&#13;
                                "f:group": {},&#13;
                                "f:names": {&#13;
                                    "f:categories": {},&#13;
                                    "f:kind": {},&#13;
                                    "f:listKind": {},&#13;
                                    "f:plural": {},&#13;
                                    "f:singular": {}&#13;
                                },&#13;
                                "f:scope": {},&#13;
                                "f:versions": {}&#13;
                            }&#13;
                        }&#13;
                    },&#13;
                    {&#13;
                        "manager": "kube-apiserver",&#13;
                        "operation": "Update",&#13;
                        "apiVersion": "apiextensions.k8s.io/v1",&#13;
                        "time": "2023-03-24T15:44:22Z",&#13;
                        "fieldsType": "FieldsV1",&#13;
                        "fieldsV1": {&#13;
                            "f:status": {&#13;
                                "f:acceptedNames": {&#13;
                                    "f:categories": {},&#13;
                                    "f:kind": {},&#13;
                                    "f:listKind": {},&#13;
                                    "f:plural": {},&#13;
                                    "f:singular": {}&#13;
                                },&#13;
                                "f:conditions": {&#13;
                                    "k:{\"type\":\"Established\"}": {&#13;
                                        ".": {},&#13;
                                        "f:lastTransitionTime": {},&#13;
                                        "f:message": {},&#13;
                                        "f:reason": {},&#13;
                                        "f:status": {},&#13;
                                        "f:type": {}&#13;
                                    },&#13;
                                    "k:{\"type\":\"NamesAccepted\"}": {&#13;
                                        ".": {},&#13;
                                        "f:lastTransitionTime": {},&#13;
                                        "f:message": {},&#13;
                                        "f:reason": {},&#13;
                                        "f:status": {},&#13;
                                        "f:type": {}&#13;
                                    }&#13;
                                }&#13;
                            }&#13;
                        },&#13;
                        "subresource": "status"&#13;
                    }&#13;
                ]&#13;
            },&#13;
            "spec": {&#13;
                "group": "efs.aws.crossplane.io",&#13;
                "names": {&#13;
                    "plural": "accesspoints",&#13;
                    "singular": "accesspoint",&#13;
                    "kind": "AccessPoint",&#13;
                    "listKind": "AccessPointList",&#13;
                    "categories": [&#13;
                        "crossplane",&#13;
                        "managed",&#13;
                        "aws"&#13;
                    ]&#13;
                },&#13;
                "scope": "Cluster",&#13;
                "versions": [&#13;
                    {&#13;
                        "name": "v1alpha1",&#13;
                        "served": true,&#13;
                        "storage": true,&#13;
                        "schema": {&#13;
                            "openAPIV3Schema": {&#13;
                                "description": "AccessPoint is the Schema for the AccessPoints API",&#13;
                                "type": "object",&#13;
                                "required": [&#13;
                                    "spec"&#13;
                                ],&#13;
                                "properties": {&#13;
                                    "apiVersion": {&#13;
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",&#13;
                                        "type": "string"&#13;
                                    },&#13;
                                    "kind": {&#13;
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",&#13;
                                        "type": "string"&#13;
                                    },&#13;
                                    "metadata": {&#13;
                                        "type": "object"&#13;
                                    },&#13;
                                    "spec": {&#13;
                                        "description": "AccessPointSpec defines the desired state of AccessPoint",&#13;
                                        "type": "object",&#13;
                                        "required": [&#13;
                                            "forProvider"&#13;
                                        ],&#13;
                                        "properties": {&#13;
                                            "deletionPolicy": {&#13;
                                                "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource.",&#13;
                                                "type": "string",&#13;
                                                "default": "Delete",&#13;
                                                "enum": [&#13;
                                                    "Orphan",&#13;
                                                    "Delete"&#13;
                                                ]&#13;
                                            },&#13;
                                            "forProvider": {&#13;
                                                "description": "AccessPointParameters defines the desired state of AccessPoint",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "region"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "fileSystemID": {&#13;
                                                        "description": "The ID of the file system for which to create the mount target.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "fileSystemIDRef": {&#13;
                                                        "description": "FileSystemIDRef are references to Filesystem used to set the FileSystemID.",&#13;
                                                        "type": "object",&#13;
                                                        "required": [&#13;
                                                            "name"&#13;
                                                        ],&#13;
                                                        "properties": {&#13;
                                                            "name": {&#13;
                                                                "description": "Name of the referenced object.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "policy": {&#13;
                                                                "description": "Policies for referencing.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "resolution": {&#13;
                                                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                        "type": "string",&#13;
                                                                        "default": "Required",&#13;
                                                                        "enum": [&#13;
                                                                            "Required",&#13;
                                                                            "Optional"&#13;
                                                                        ]&#13;
                                                                    },&#13;
                                                                    "resolve": {&#13;
                                                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                        "type": "string",&#13;
                                                                        "enum": [&#13;
                                                                            "Always",&#13;
                                                                            "IfNotPresent"&#13;
                                                                        ]&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "fileSystemIDSelector": {&#13;
                                                        "description": "FileSystemIDSelector selects references to Filesystem used to set the FileSystemID.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "matchControllerRef": {&#13;
                                                                "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",&#13;
                                                                "type": "boolean"&#13;
                                                            },&#13;
                                                            "matchLabels": {&#13;
                                                                "description": "MatchLabels ensures an object with matching labels is selected.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "policy": {&#13;
                                                                "description": "Policies for selection.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "resolution": {&#13;
                                                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                        "type": "string",&#13;
                                                                        "default": "Required",&#13;
                                                                        "enum": [&#13;
                                                                            "Required",&#13;
                                                                            "Optional"&#13;
                                                                        ]&#13;
                                                                    },&#13;
                                                                    "resolve": {&#13;
                                                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                        "type": "string",&#13;
                                                                        "enum": [&#13;
                                                                            "Always",&#13;
                                                                            "IfNotPresent"&#13;
                                                                        ]&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "posixUser": {&#13;
                                                        "description": "The operating system user and group applied to all file system requests made using the access point.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "gid": {&#13;
                                                                "type": "integer",&#13;
                                                                "format": "int64"&#13;
                                                            },&#13;
                                                            "secondaryGids": {&#13;
                                                                "type": "array",&#13;
                                                                "items": {&#13;
                                                                    "type": "integer",&#13;
                                                                    "format": "int64"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "uid": {&#13;
                                                                "type": "integer",&#13;
                                                                "format": "int64"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "region": {&#13;
                                                        "description": "Region is which region the AccessPoint will be created.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "rootDirectory": {&#13;
                                                        "description": "Specifies the directory on the Amazon EFS file system that the access point exposes as the root directory of your file system to NFS clients using the access point. The clients using the access point can only access the root directory and below. If the RootDirectory &gt; Path specified does not exist, EFS creates it and applies the CreationInfo settings when a client connects to an access point. When specifying a RootDirectory, you need to provide the Path, and the CreationInfo. \n Amazon EFS creates a root directory only if you have provided the CreationInfo: OwnUid, OwnGID, and permissions for the directory. If you do not provide this information, Amazon EFS does not create the root directory. If the root directory does not exist, attempts to mount using the access point will fail.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "creationInfo": {&#13;
                                                                "description": "Required if the RootDirectory &gt; Path specified does not exist. Specifies the POSIX IDs and permissions to apply to the access point's RootDirectory &gt; Path. If the access point root directory does not exist, EFS creates it with these settings when a client connects to the access point. When specifying CreationInfo, you must include values for all properties. \n Amazon EFS creates a root directory only if you have provided the CreationInfo: OwnUid, OwnGID, and permissions for the directory. If you do not provide this information, Amazon EFS does not create the root directory. If the root directory does not exist, attempts to mount using the access point will fail. \n If you do not provide CreationInfo and the specified RootDirectory does not exist, attempts to mount the file system using the access point will fail.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "ownerGid": {&#13;
                                                                        "type": "integer",&#13;
                                                                        "format": "int64"&#13;
                                                                    },&#13;
                                                                    "ownerUid": {&#13;
                                                                        "type": "integer",&#13;
                                                                        "format": "int64"&#13;
                                                                    },&#13;
                                                                    "permissions": {&#13;
                                                                        "type": "string"&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "path": {&#13;
                                                                "type": "string"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "tags": {&#13;
                                                        "description": "Creates tags associated with the access point. Each tag is a key-value pair, each key must be unique. For more information, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the Amazon Web Services General Reference Guide.",&#13;
                                                        "type": "array",&#13;
                                                        "items": {&#13;
                                                            "type": "object",&#13;
                                                            "properties": {&#13;
                                                                "key": {&#13;
                                                                    "type": "string"&#13;
                                                                },&#13;
                                                                "value": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "providerConfigRef": {&#13;
                                                "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",&#13;
                                                "type": "object",&#13;
                                                "default": {&#13;
                                                    "name": "default"&#13;
                                                },&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the referenced object.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "policy": {&#13;
                                                        "description": "Policies for referencing.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "resolution": {&#13;
                                                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                "type": "string",&#13;
                                                                "default": "Required",&#13;
                                                                "enum": [&#13;
                                                                    "Required",&#13;
                                                                    "Optional"&#13;
                                                                ]&#13;
                                                            },&#13;
                                                            "resolve": {&#13;
                                                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                "type": "string",&#13;
                                                                "enum": [&#13;
                                                                    "Always",&#13;
                                                                    "IfNotPresent"&#13;
                                                                ]&#13;
                                                            }&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "providerRef": {&#13;
                                                "description": "ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the referenced object.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "policy": {&#13;
                                                        "description": "Policies for referencing.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "resolution": {&#13;
                                                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                "type": "string",&#13;
                                                                "default": "Required",&#13;
                                                                "enum": [&#13;
                                                                    "Required",&#13;
                                                                    "Optional"&#13;
                                                                ]&#13;
                                                            },&#13;
                                                            "resolve": {&#13;
                                                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                "type": "string",&#13;
                                                                "enum": [&#13;
                                                                    "Always",&#13;
                                                                    "IfNotPresent"&#13;
                                                                ]&#13;
                                                            }&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "publishConnectionDetailsTo": {&#13;
                                                "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "configRef": {&#13;
                                                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",&#13;
                                                        "type": "object",&#13;
                                                        "default": {&#13;
                                                            "name": "default"&#13;
                                                        },&#13;
                                                        "required": [&#13;
                                                            "name"&#13;
                                                        ],&#13;
                                                        "properties": {&#13;
                                                            "name": {&#13;
                                                                "description": "Name of the referenced object.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "policy": {&#13;
                                                                "description": "Policies for referencing.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "resolution": {&#13;
                                                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                        "type": "string",&#13;
                                                                        "default": "Required",&#13;
                                                                        "enum": [&#13;
                                                                            "Required",&#13;
                                                                            "Optional"&#13;
                                                                        ]&#13;
                                                                    },&#13;
                                                                    "resolve": {&#13;
                                                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                        "type": "string",&#13;
                                                                        "enum": [&#13;
                                                                            "Always",&#13;
                                                                            "IfNotPresent"&#13;
                                                                        ]&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "metadata": {&#13;
                                                        "description": "Metadata is the metadata for connection secret.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "annotations": {&#13;
                                                                "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "labels": {&#13;
                                                                "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "type": {&#13;
                                                                "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",&#13;
                                                                "type": "string"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "name": {&#13;
                                                        "description": "Name is the name of the connection secret.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "writeConnectionSecretToRef": {&#13;
                                                "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name",&#13;
                                                    "namespace"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the secret.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "namespace": {&#13;
                                                        "description": "Namespace of the secret.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            }&#13;
                                        }&#13;
                                    },&#13;
                                    "status": {&#13;
                                        "description": "AccessPointStatus defines the observed state of AccessPoint.",&#13;
                                        "type": "object",&#13;
                                        "properties": {&#13;
                                            "atProvider": {&#13;
                                                "description": "AccessPointObservation defines the observed state of AccessPoint",&#13;
                                                "type": "object",&#13;
                                                "properties": {&#13;
                                                    "accessPointARN": {&#13;
                                                        "description": "The unique Amazon Resource Name (ARN) associated with the access point.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "accessPointID": {&#13;
                                                        "description": "The ID of the access point, assigned by Amazon EFS.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "clientToken": {&#13;
                                                        "description": "The opaque string specified in the request to ensure idempotent creation.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "fileSystemID": {&#13;
                                                        "description": "The ID of the EFS file system that the access point applies to.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "lifeCycleState": {&#13;
                                                        "description": "Identifies the lifecycle phase of the access point.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "name": {&#13;
                                                        "description": "The name of the access point. This is the value of the Name tag.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "ownerID": {&#13;
                                                        "description": "Identified the Amazon Web Services account that owns the access point resource.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "conditions": {&#13;
                                                "description": "Conditions of the resource.",&#13;
                                                "type": "array",&#13;
                                                "items": {&#13;
                                                    "description": "A Condition that may apply to a resource.",&#13;
                                                    "type": "object",&#13;
                                                    "required": [&#13;
                                                        "lastTransitionTime",&#13;
                                                        "reason",&#13;
                                                        "status",&#13;
                                                        "type"&#13;
                                                    ],&#13;
                                                    "properties": {&#13;
                                                        "lastTransitionTime": {&#13;
                                                            "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",&#13;
                                                            "type": "string",&#13;
                                                            "format": "date-time"&#13;
                                                        },&#13;
                                                        "message": {&#13;
                                                            "description": "A Message containing details about this condition's last transition from one status to another, if any.",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "reason": {&#13;
                                                            "description": "A Reason for this condition's last transition from one status to another.",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "status": {&#13;
                                                            "description": "Status of this condition; is it currently True, False, or Unknown?",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "type": {&#13;
                                                            "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",&#13;
                                                            "type": "string"&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            }&#13;
                                        }&#13;
                                    }&#13;
                                }&#13;
                            }&#13;
                        },&#13;
                        "subresources": {&#13;
                            "status": {}&#13;
                        },&#13;
                        "additionalPrinterColumns": [&#13;
                            {&#13;
                                "name": "READY",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".status.conditions[?(@.type=='Ready')].status"&#13;
                            },&#13;
                            {&#13;
                                "name": "SYNCED",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".status.conditions[?(@.type=='Synced')].status"&#13;
                            },&#13;
                            {&#13;
                                "name": "EXTERNAL-NAME",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"&#13;
                            }&#13;
                        ]&#13;
                    }&#13;
                ],&#13;
                "conversion": {&#13;
                    "strategy": "None"&#13;
                }&#13;
            },&#13;
            "status": {&#13;
                "conditions": [&#13;
                    {&#13;
                        "type": "NamesAccepted",&#13;
                        "status": "True",&#13;
                        "lastTransitionTime": "2023-03-24T15:44:22Z",&#13;
                        "reason": "NoConflicts",&#13;
                        "message": "no conflicts found"&#13;
                    },&#13;
                    {&#13;
                        "type": "Established",&#13;
                        "status": "True",&#13;
                        "lastTransitionTime": "2023-03-24T15:44:25Z",&#13;
                        "reason": "InitialNamesAccepted",&#13;
                        "message": "the initial names have been accepted"&#13;
                    }&#13;
                ],&#13;
                "acceptedNames": {&#13;
                    "plural": "accesspoints",&#13;
                    "singular": "accesspoint",&#13;
                    "kind": "AccessPoint",&#13;
                    "listKind": "AccessPointList",&#13;
                    "categories": [&#13;
                        "crossplane",&#13;
                        "managed",&#13;
                        "aws"&#13;
                    ]&#13;
                },&#13;
                "storedVersions": [&#13;
                    "v1alpha1"&#13;
                ]&#13;
            }&#13;
        },&#13;
        {&#13;
            "metadata": {&#13;
                "name": "accounts.storage.azure.crossplane.io",&#13;
                "uid": "f5eae6ce-3c31-4d6e-8c19-c2576975f806",&#13;
                "resourceVersion": "3260570",&#13;
                "generation": 1,&#13;
                "creationTimestamp": "2023-03-28T14:02:35Z",&#13;
                "annotations": {&#13;
                    "controller-gen.kubebuilder.io/version": "v0.8.0"&#13;
                },&#13;
                "ownerReferences": [&#13;
                    {&#13;
                        "apiVersion": "pkg.crossplane.io/v1",&#13;
                        "kind": "ProviderRevision",&#13;
                        "name": "crossplane-provider-azure-4e71f9c5dcc1",&#13;
                        "uid": "d7720a50-3fe3-4a36-8898-c030066feb90",&#13;
                        "controller": true,&#13;
                        "blockOwnerDeletion": true&#13;
                    },&#13;
                    {&#13;
                        "apiVersion": "pkg.crossplane.io/v1",&#13;
                        "kind": "Provider",&#13;
                        "name": "crossplane-provider-azure",&#13;
                        "uid": "d63c3976-c221-4d84-8a2e-b2dad4547d17",&#13;
                        "controller": false,&#13;
                        "blockOwnerDeletion": true&#13;
                    }&#13;
                ],&#13;
                "managedFields": [&#13;
                    {&#13;
                        "manager": "crossplane",&#13;
                        "operation": "Update",&#13;
                        "apiVersion": "apiextensions.k8s.io/v1",&#13;
                        "time": "2023-03-28T14:02:35Z",&#13;
                        "fieldsType": "FieldsV1",&#13;
                        "fieldsV1": {&#13;
                            "f:metadata": {&#13;
                                "f:annotations": {&#13;
                                    ".": {},&#13;
                                    "f:controller-gen.kubebuilder.io/version": {}&#13;
                                },&#13;
                                "f:ownerReferences": {&#13;
                                    ".": {},&#13;
                                    "k:{\"uid\":\"d63c3976-c221-4d84-8a2e-b2dad4547d17\"}": {},&#13;
                                    "k:{\"uid\":\"d7720a50-3fe3-4a36-8898-c030066feb90\"}": {}&#13;
                                }&#13;
                            },&#13;
                            "f:spec": {&#13;
                                "f:conversion": {&#13;
                                    ".": {},&#13;
                                    "f:strategy": {}&#13;
                                },&#13;
                                "f:group": {},&#13;
                                "f:names": {&#13;
                                    "f:categories": {},&#13;
                                    "f:kind": {},&#13;
                                    "f:listKind": {},&#13;
                                    "f:plural": {},&#13;
                                    "f:singular": {}&#13;
                                },&#13;
                                "f:scope": {},&#13;
                                "f:versions": {}&#13;
                            }&#13;
                        }&#13;
                    },&#13;
                    {&#13;
                        "manager": "kube-apiserver",&#13;
                        "operation": "Update",&#13;
                        "apiVersion": "apiextensions.k8s.io/v1",&#13;
                        "time": "2023-03-28T14:02:36Z",&#13;
                        "fieldsType": "FieldsV1",&#13;
                        "fieldsV1": {&#13;
                            "f:status": {&#13;
                                "f:acceptedNames": {&#13;
                                    "f:categories": {},&#13;
                                    "f:kind": {},&#13;
                                    "f:listKind": {},&#13;
                                    "f:plural": {},&#13;
                                    "f:singular": {}&#13;
                                },&#13;
                                "f:conditions": {&#13;
                                    "k:{\"type\":\"Established\"}": {&#13;
                                        ".": {},&#13;
                                        "f:lastTransitionTime": {},&#13;
                                        "f:message": {},&#13;
                                        "f:reason": {},&#13;
                                        "f:status": {},&#13;
                                        "f:type": {}&#13;
                                    },&#13;
                                    "k:{\"type\":\"NamesAccepted\"}": {&#13;
                                        ".": {},&#13;
                                        "f:lastTransitionTime": {},&#13;
                                        "f:message": {},&#13;
                                        "f:reason": {},&#13;
                                        "f:status": {},&#13;
                                        "f:type": {}&#13;
                                    }&#13;
                                }&#13;
                            }&#13;
                        },&#13;
                        "subresource": "status"&#13;
                    }&#13;
                ]&#13;
            },&#13;
            "spec": {&#13;
                "group": "storage.azure.crossplane.io",&#13;
                "names": {&#13;
                    "plural": "accounts",&#13;
                    "singular": "account",&#13;
                    "kind": "Account",&#13;
                    "listKind": "AccountList",&#13;
                    "categories": [&#13;
                        "crossplane",&#13;
                        "managed",&#13;
                        "azure"&#13;
                    ]&#13;
                },&#13;
                "scope": "Cluster",&#13;
                "versions": [&#13;
                    {&#13;
                        "name": "v1alpha3",&#13;
                        "served": true,&#13;
                        "storage": true,&#13;
                        "schema": {&#13;
                            "openAPIV3Schema": {&#13;
                                "description": "An Account is a managed resource that represents an Azure Blob Service Account.",&#13;
                                "type": "object",&#13;
                                "required": [&#13;
                                    "spec"&#13;
                                ],&#13;
                                "properties": {&#13;
                                    "apiVersion": {&#13;
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",&#13;
                                        "type": "string"&#13;
                                    },&#13;
                                    "kind": {&#13;
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",&#13;
                                        "type": "string"&#13;
                                    },&#13;
                                    "metadata": {&#13;
                                        "type": "object"&#13;
                                    },&#13;
                                    "spec": {&#13;
                                        "description": "An AccountSpec defines the desired state of an Account.",&#13;
                                        "type": "object",&#13;
                                        "required": [&#13;
                                            "resourceGroupName",&#13;
                                            "storageAccountSpec"&#13;
                                        ],&#13;
                                        "properties": {&#13;
                                            "deletionPolicy": {&#13;
                                                "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource.",&#13;
                                                "type": "string",&#13;
                                                "default": "Delete",&#13;
                                                "enum": [&#13;
                                                    "Orphan",&#13;
                                                    "Delete"&#13;
                                                ]&#13;
                                            },&#13;
                                            "providerConfigRef": {&#13;
                                                "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",&#13;
                                                "type": "object",&#13;
                                                "default": {&#13;
                                                    "name": "default"&#13;
                                                },&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the referenced object.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "providerRef": {&#13;
                                                "description": "ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the referenced object.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "publishConnectionDetailsTo": {&#13;
                                                "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "configRef": {&#13;
                                                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",&#13;
                                                        "type": "object",&#13;
                                                        "default": {&#13;
                                                            "name": "default"&#13;
                                                        },&#13;
                                                        "required": [&#13;
                                                            "name"&#13;
                                                        ],&#13;
                                                        "properties": {&#13;
                                                            "name": {&#13;
                                                                "description": "Name of the referenced object.",&#13;
                                                                "type": "string"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "metadata": {&#13;
                                                        "description": "Metadata is the metadata for connection secret.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "annotations": {&#13;
                                                                "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "labels": {&#13;
                                                                "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "type": {&#13;
                                                                "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",&#13;
                                                                "type": "string"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "name": {&#13;
                                                        "description": "Name is the name of the connection secret.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "resourceGroupName": {&#13;
                                                "description": "ResourceGroupName specifies the resource group for this Account.",&#13;
                                                "type": "string"&#13;
                                            },&#13;
                                            "storageAccountSpec": {&#13;
                                                "description": "StorageAccountSpec specifies the desired state of this Account.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "kind",&#13;
                                                    "location",&#13;
                                                    "sku"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "identity": {&#13;
                                                        "description": "Identity - The identity of the resource.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "principalId": {&#13;
                                                                "description": "PrincipalID - The principal ID of resource identity.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "tenantId": {&#13;
                                                                "description": "TenantID - The tenant ID of resource.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "type": {&#13;
                                                                "description": "Type - The identity type.",&#13;
                                                                "type": "string"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "kind": {&#13;
                                                        "description": "Kind - Indicates the type of storage account. Possible values include: 'Storage', 'BlobStorage'",&#13;
                                                        "type": "string",&#13;
                                                        "enum": [&#13;
                                                            "Storage",&#13;
                                                            "BlobStorage"&#13;
                                                        ]&#13;
                                                    },&#13;
                                                    "location": {&#13;
                                                        "description": "Location - The location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "properties": {&#13;
                                                        "description": "StorageAccountSpecProperties - The parameters used to create the storage account.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "accessTier": {&#13;
                                                                "description": "AccessTier - Required for storage accounts where kind = BlobStorage. The access tier used for billing. Possible values include: 'Hot', 'Cool'",&#13;
                                                                "type": "string",&#13;
                                                                "enum": [&#13;
                                                                    "Hot",&#13;
                                                                    "Cool"&#13;
                                                                ]&#13;
                                                            },&#13;
                                                            "customDomain": {&#13;
                                                                "description": "CustomDomain - User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. to clear the existing custom domain, use an empty string for the custom domain name property.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "name": {&#13;
                                                                        "description": "Name - custom domain name assigned to the storage account. Name is the CNAME source.",&#13;
                                                                        "type": "string"&#13;
                                                                    },&#13;
                                                                    "useSubDomainName": {&#13;
                                                                        "description": "UseSubDomainName - Indicates whether indirect CNAME validation is enabled.",&#13;
                                                                        "type": "boolean"&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "encryption": {&#13;
                                                                "description": "Encryption - Provides the encryption settings on the account. If left unspecified the account encryption settings will remain the same. The default setting is unencrypted.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "keySource": {&#13;
                                                                        "description": "KeySource - The encryption keySource (provider). \n Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault",&#13;
                                                                        "type": "string",&#13;
                                                                        "enum": [&#13;
                                                                            "Microsoft.Storage",&#13;
                                                                            "Microsoft.Keyvault"&#13;
                                                                        ]&#13;
                                                                    },&#13;
                                                                    "keyvaultproperties": {&#13;
                                                                        "description": "KeyVaultProperties - Properties provided by key vault.",&#13;
                                                                        "type": "object",&#13;
                                                                        "properties": {&#13;
                                                                            "keyname": {&#13;
                                                                                "description": "KeyName - The name of KeyVault key.",&#13;
                                                                                "type": "string"&#13;
                                                                            },&#13;
                                                                            "keyvaulturi": {&#13;
                                                                                "description": "KeyVaultURI - The Uri of KeyVault.",&#13;
                                                                                "type": "string"&#13;
                                                                            },&#13;
                                                                            "keyversion": {&#13;
                                                                                "description": "KeyVersion - The version of KeyVault key.",&#13;
                                                                                "type": "string"&#13;
                                                                            }&#13;
                                                                        }&#13;
                                                                    },&#13;
                                                                    "services": {&#13;
                                                                        "description": "Services - List of services which support encryption.",&#13;
                                                                        "type": "object",&#13;
                                                                        "properties": {&#13;
                                                                            "blob": {&#13;
                                                                                "description": "Blob - The encryption function of the blob storage service.",&#13;
                                                                                "type": "boolean"&#13;
                                                                            },&#13;
                                                                            "file": {&#13;
                                                                                "description": "File - The encryption function of the file storage service.",&#13;
                                                                                "type": "boolean"&#13;
                                                                            }&#13;
                                                                        }&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "networkAcls": {&#13;
                                                                "description": "NetworkRuleSet - Network rule set",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "bypass": {&#13;
                                                                        "description": "Bypass - Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics. Possible values include: 'None', 'Logging', 'Metrics', 'AzureServices'",&#13;
                                                                        "type": "string"&#13;
                                                                    },&#13;
                                                                    "defaultAction": {&#13;
                                                                        "description": "DefaultAction - Specifies the default action of allow or deny when no other rules match. \n Possible values include: 'Allow', 'Deny'",&#13;
                                                                        "type": "string",&#13;
                                                                        "enum": [&#13;
                                                                            "Allow",&#13;
                                                                            "Deny"&#13;
                                                                        ]&#13;
                                                                    },&#13;
                                                                    "ipRules": {&#13;
                                                                        "description": "IPRules - Sets the IP ACL rules",&#13;
                                                                        "type": "array",&#13;
                                                                        "items": {&#13;
                                                                            "description": "IPRule IP rule with specific IP or IP range in CIDR format.",&#13;
                                                                            "type": "object",&#13;
                                                                            "properties": {&#13;
                                                                                "action": {&#13;
                                                                                    "description": "Action - The action of IP ACL rule. Possible values include: 'Allow'",&#13;
                                                                                    "type": "string",&#13;
                                                                                    "enum": [&#13;
                                                                                        "Allow"&#13;
                                                                                    ]&#13;
                                                                                },&#13;
                                                                                "value": {&#13;
                                                                                    "description": "IPAddressOrRange - Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",&#13;
                                                                                    "type": "string"&#13;
                                                                                }&#13;
                                                                            }&#13;
                                                                        }&#13;
                                                                    },&#13;
                                                                    "virtualNetworkRules": {&#13;
                                                                        "description": "VirtualNetworkRules - Sets the virtual network rules",&#13;
                                                                        "type": "array",&#13;
                                                                        "items": {&#13;
                                                                            "description": "VirtualNetworkRule virtual Network rule.",&#13;
                                                                            "type": "object",&#13;
                                                                            "properties": {&#13;
                                                                                "action": {&#13;
                                                                                    "description": "Action - The action of virtual network rule. Possible values include: 'Allow'",&#13;
                                                                                    "type": "string",&#13;
                                                                                    "enum": [&#13;
                                                                                        "Allow"&#13;
                                                                                    ]&#13;
                                                                                },&#13;
                                                                                "id": {&#13;
                                                                                    "description": "VirtualNetworkResourceID - Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",&#13;
                                                                                    "type": "string"&#13;
                                                                                }&#13;
                                                                            }&#13;
                                                                        }&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "supportsHttpsTrafficOnly": {&#13;
                                                                "description": "EnableHTTPSTrafficOnly - Allows https traffic only to storage service if sets to true.",&#13;
                                                                "type": "boolean"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "sku": {&#13;
                                                        "description": "Sku of the storage account.",&#13;
                                                        "type": "object",&#13;
                                                        "required": [&#13;
                                                            "name"&#13;
                                                        ],&#13;
                                                        "properties": {&#13;
                                                            "capabilities": {&#13;
                                                                "description": "Capabilities - The capability information in the specified sku, including file encryption, network acls, change notification, etc.",&#13;
                                                                "type": "array",&#13;
                                                                "items": {&#13;
                                                                    "description": "skuCapability the capability information in the specified sku, including file encryption, network acls, change notification, etc.",&#13;
                                                                    "type": "object",&#13;
                                                                    "properties": {&#13;
                                                                        "name": {&#13;
                                                                            "description": "Name - The name of capability, The capability information in the specified sku, including file encryption, network acls, change notification, etc.",&#13;
                                                                            "type": "string"&#13;
                                                                        },&#13;
                                                                        "value": {&#13;
                                                                            "description": "Value - A string value to indicate states of given capability. Possibly 'true' or 'false'.",&#13;
                                                                            "type": "string",&#13;
                                                                            "enum": [&#13;
                                                                                true,&#13;
                                                                                false&#13;
                                                                            ]&#13;
                                                                        }&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "kind": {&#13;
                                                                "description": "Kind - Indicates the type of storage account. \n Possible values include: 'Storage', 'BlobStorage'",&#13;
                                                                "type": "string",&#13;
                                                                "enum": [&#13;
                                                                    "Storage",&#13;
                                                                    "BlobStorage"&#13;
                                                                ]&#13;
                                                            },&#13;
                                                            "locations": {&#13;
                                                                "description": "Locations - The set of locations that the Sku is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).",&#13;
                                                                "type": "array",&#13;
                                                                "items": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "name": {&#13;
                                                                "description": "Name - Gets or sets the sku name. Required for account creation; optional for update. Note that in older versions, sku name was called accountType. \n Possible values include: 'Standard_LRS', 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'",&#13;
                                                                "type": "string",&#13;
                                                                "enum": [&#13;
                                                                    "Standard_LRS",&#13;
                                                                    "Standard_GRS",&#13;
                                                                    "Standard_RAGRS",&#13;
                                                                    "Standard_ZRS",&#13;
                                                                    "Premium_LRS"&#13;
                                                                ]&#13;
                                                            },&#13;
                                                            "resourceType": {&#13;
                                                                "description": "ResourceType - The type of the resource, usually it is 'storageAccounts'.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "tier": {&#13;
                                                                "description": "Tier - Gets the sku tier. This is based on the Sku name. \n Possible values include: 'Standard', 'Premium'",&#13;
                                                                "type": "string",&#13;
                                                                "enum": [&#13;
                                                                    "Standard",&#13;
                                                                    "Premium"&#13;
                                                                ]&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "tags": {&#13;
                                                        "description": "Tags - A list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.",&#13;
                                                        "type": "object",&#13;
                                                        "additionalProperties": {&#13;
                                                            "type": "string"&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "writeConnectionSecretToRef": {&#13;
                                                "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name",&#13;
                                                    "namespace"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the secret.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "namespace": {&#13;
                                                        "description": "Namespace of the secret.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            }&#13;
                                        }&#13;
                                    },&#13;
                                    "status": {&#13;
                                        "description": "An AccountStatus represents the observed state of an Account.",&#13;
                                        "type": "object",&#13;
                                        "properties": {&#13;
                                            "conditions": {&#13;
                                                "description": "Conditions of the resource.",&#13;
                                                "type": "array",&#13;
                                                "items": {&#13;
                                                    "description": "A Condition that may apply to a resource.",&#13;
                                                    "type": "object",&#13;
                                                    "required": [&#13;
                                                        "lastTransitionTime",&#13;
                                                        "reason",&#13;
                                                        "status",&#13;
                                                        "type"&#13;
                                                    ],&#13;
                                                    "properties": {&#13;
                                                        "lastTransitionTime": {&#13;
                                                            "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",&#13;
                                                            "type": "string",&#13;
                                                            "format": "date-time"&#13;
                                                        },&#13;
                                                        "message": {&#13;
                                                            "description": "A Message containing details about this condition's last transition from one status to another, if any.",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "reason": {&#13;
                                                            "description": "A Reason for this condition's last transition from one status to another.",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "status": {&#13;
                                                            "description": "Status of this condition; is it currently True, False, or Unknown?",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "type": {&#13;
                                                            "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",&#13;
                                                            "type": "string"&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "id": {&#13;
                                                "description": "ID of this Account.",&#13;
                                                "type": "string"&#13;
                                            },&#13;
                                            "name": {&#13;
                                                "description": "Name of this Account.",&#13;
                                                "type": "string"&#13;
                                            },&#13;
                                            "properties": {&#13;
                                                "description": "Properties of this Account.",&#13;
                                                "type": "object",&#13;
                                                "properties": {&#13;
                                                    "creationTime": {&#13;
                                                        "description": "CreationTime - the creation date and time of the storage account in UTC.",&#13;
                                                        "type": "string",&#13;
                                                        "format": "date-time"&#13;
                                                    },&#13;
                                                    "lastGeoFailoverTime": {&#13;
                                                        "description": "LastGeoFailoverTime - the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.",&#13;
                                                        "type": "string",&#13;
                                                        "format": "date-time"&#13;
                                                    },&#13;
                                                    "primaryEndpoints": {&#13;
                                                        "description": "PrimaryEndpoints - the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "blob": {&#13;
                                                                "description": "Blob - the blob endpoint.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "file": {&#13;
                                                                "description": "File - the file endpoint.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "queue": {&#13;
                                                                "description": "Queue - the queue endpoint.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "table": {&#13;
                                                                "description": "Table - the table endpoint.",&#13;
                                                                "type": "string"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "primaryLocation": {&#13;
                                                        "description": "PrimaryLocation - the location of the primary data center for the storage account.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "provisioningState": {&#13;
                                                        "description": "ProvisioningState - the status of the storage account at the time the operation was called. Possible values include: 'Creating', 'ResolvingDNS', 'Succeeded'",&#13;
                                                        "type": "string",&#13;
                                                        "enum": [&#13;
                                                            "Creating",&#13;
                                                            "ResolvingDNS",&#13;
                                                            "Succeeded"&#13;
                                                        ]&#13;
                                                    },&#13;
                                                    "secondaryEndpoints": {&#13;
                                                        "description": "SecondaryEndpoints - the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the Sku name is Standard_RAGRS.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "blob": {&#13;
                                                                "description": "Blob - the blob endpoint.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "file": {&#13;
                                                                "description": "File - the file endpoint.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "queue": {&#13;
                                                                "description": "Queue - the queue endpoint.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "table": {&#13;
                                                                "description": "Table - the table endpoint.",&#13;
                                                                "type": "string"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "secondaryLocation": {&#13;
                                                        "description": "SecondaryLocation - the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "statusOfPrimary": {&#13;
                                                        "description": "StatusOfPrimary - the status indicating whether the primary location of the storage account is available or unavailable. Possible values include: 'Available', 'Unavailable'",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "statusOfSecondary": {&#13;
                                                        "description": "StatusOfSecondary - the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the Sku name is Standard_GRS or Standard_RAGRS. Possible values include: 'Available', 'Unavailable'",&#13;
                                                        "type": "string",&#13;
                                                        "enum": [&#13;
                                                            "Available",&#13;
                                                            "Unavailable"&#13;
                                                        ]&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "type": {&#13;
                                                "description": "Type of this Account.",&#13;
                                                "type": "string"&#13;
                                            }&#13;
                                        }&#13;
                                    }&#13;
                                }&#13;
                            }&#13;
                        },&#13;
                        "subresources": {&#13;
                            "status": {}&#13;
                        },&#13;
                        "additionalPrinterColumns": [&#13;
                            {&#13;
                                "name": "RESOURCE_GROUP",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".spec.resourceGroupName"&#13;
                            },&#13;
                            {&#13;
                                "name": "ACCOUNT_NAME",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".spec.storageAccountName"&#13;
                            },&#13;
                            {&#13;
                                "name": "AGE",&#13;
                                "type": "date",&#13;
                                "jsonPath": ".metadata.creationTimestamp"&#13;
                            }&#13;
                        ]&#13;
                    }&#13;
                ],&#13;
                "conversion": {&#13;
                    "strategy": "None"&#13;
                }&#13;
            },&#13;
            "status": {&#13;
                "conditions": [&#13;
                    {&#13;
                        "type": "NamesAccepted",&#13;
                        "status": "True",&#13;
                        "lastTransitionTime": "2023-03-28T14:02:36Z",&#13;
                        "reason": "NoConflicts",&#13;
                        "message": "no conflicts found"&#13;
                    },&#13;
                    {&#13;
                        "type": "Established",&#13;
                        "status": "True",&#13;
                        "lastTransitionTime": "2023-03-28T14:02:36Z",&#13;
                        "reason": "InitialNamesAccepted",&#13;
                        "message": "the initial names have been accepted"&#13;
                    }&#13;
                ],&#13;
                "acceptedNames": {&#13;
                    "plural": "accounts",&#13;
                    "singular": "account",&#13;
                    "kind": "Account",&#13;
                    "listKind": "AccountList",&#13;
                    "categories": [&#13;
                        "crossplane",&#13;
                        "managed",&#13;
                        "azure"&#13;
                    ]&#13;
                },&#13;
                "storedVersions": [&#13;
                    "v1alpha3"&#13;
                ]&#13;
            }&#13;
        },&#13;
        {&#13;
            "metadata": {&#13;
                "name": "activities.sfn.aws.crossplane.io",&#13;
                "uid": "a8273f4d-8ceb-41a9-9972-164909ad5ad2",&#13;
                "resourceVersion": "12556",&#13;
                "generation": 1,&#13;
                "creationTimestamp": "2023-03-24T15:44:05Z",&#13;
                "annotations": {&#13;
                    "controller-gen.kubebuilder.io/version": "v0.8.0"&#13;
                },&#13;
                "ownerReferences": [&#13;
                    {&#13;
                        "apiVersion": "pkg.crossplane.io/v1",&#13;
                        "kind": "ProviderRevision",&#13;
                        "name": "crossplane-provider-aws-245ce7fb587d",&#13;
                        "uid": "1b69d3a2-2bd9-478e-926c-9774633c918c",&#13;
                        "controller": true,&#13;
                        "blockOwnerDeletion": true&#13;
                    },&#13;
                    {&#13;
                        "apiVersion": "pkg.crossplane.io/v1",&#13;
                        "kind": "Provider",&#13;
                        "name": "crossplane-provider-aws",&#13;
                        "uid": "f9d15608-59ff-498c-a393-01ef8688eb40",&#13;
                        "controller": false,&#13;
                        "blockOwnerDeletion": true&#13;
                    }&#13;
                ],&#13;
                "managedFields": [&#13;
                    {&#13;
                        "manager": "crossplane",&#13;
                        "operation": "Update",&#13;
                        "apiVersion": "apiextensions.k8s.io/v1",&#13;
                        "time": "2023-03-24T15:43:57Z",&#13;
                        "fieldsType": "FieldsV1",&#13;
                        "fieldsV1": {&#13;
                            "f:metadata": {&#13;
                                "f:annotations": {&#13;
                                    ".": {},&#13;
                                    "f:controller-gen.kubebuilder.io/version": {}&#13;
                                },&#13;
                                "f:ownerReferences": {&#13;
                                    ".": {},&#13;
                                    "k:{\"uid\":\"1b69d3a2-2bd9-478e-926c-9774633c918c\"}": {},&#13;
                                    "k:{\"uid\":\"f9d15608-59ff-498c-a393-01ef8688eb40\"}": {}&#13;
                                }&#13;
                            },&#13;
                            "f:spec": {&#13;
                                "f:conversion": {&#13;
                                    ".": {},&#13;
                                    "f:strategy": {}&#13;
                                },&#13;
                                "f:group": {},&#13;
                                "f:names": {&#13;
                                    "f:categories": {},&#13;
                                    "f:kind": {},&#13;
                                    "f:listKind": {},&#13;
                                    "f:plural": {},&#13;
                                    "f:singular": {}&#13;
                                },&#13;
                                "f:scope": {},&#13;
                                "f:versions": {}&#13;
                            }&#13;
                        }&#13;
                    },&#13;
                    {&#13;
                        "manager": "kube-apiserver",&#13;
                        "operation": "Update",&#13;
                        "apiVersion": "apiextensions.k8s.io/v1",&#13;
                        "time": "2023-03-24T15:44:40Z",&#13;
                        "fieldsType": "FieldsV1",&#13;
                        "fieldsV1": {&#13;
                            "f:status": {&#13;
                                "f:acceptedNames": {&#13;
                                    "f:categories": {},&#13;
                                    "f:kind": {},&#13;
                                    "f:listKind": {},&#13;
                                    "f:plural": {},&#13;
                                    "f:singular": {}&#13;
                                },&#13;
                                "f:conditions": {&#13;
                                    "k:{\"type\":\"Established\"}": {&#13;
                                        ".": {},&#13;
                                        "f:lastTransitionTime": {},&#13;
                                        "f:message": {},&#13;
                                        "f:reason": {},&#13;
                                        "f:status": {},&#13;
                                        "f:type": {}&#13;
                                    },&#13;
                                    "k:{\"type\":\"NamesAccepted\"}": {&#13;
                                        ".": {},&#13;
                                        "f:lastTransitionTime": {},&#13;
                                        "f:message": {},&#13;
                                        "f:reason": {},&#13;
                                        "f:status": {},&#13;
                                        "f:type": {}&#13;
                                    }&#13;
                                }&#13;
                            }&#13;
                        },&#13;
                        "subresource": "status"&#13;
                    }&#13;
                ]&#13;
            },&#13;
            "spec": {&#13;
                "group": "sfn.aws.crossplane.io",&#13;
                "names": {&#13;
                    "plural": "activities",&#13;
                    "singular": "activity",&#13;
                    "kind": "Activity",&#13;
                    "listKind": "ActivityList",&#13;
                    "categories": [&#13;
                        "crossplane",&#13;
                        "managed",&#13;
                        "aws"&#13;
                    ]&#13;
                },&#13;
                "scope": "Cluster",&#13;
                "versions": [&#13;
                    {&#13;
                        "name": "v1alpha1",&#13;
                        "served": true,&#13;
                        "storage": true,&#13;
                        "schema": {&#13;
                            "openAPIV3Schema": {&#13;
                                "description": "Activity is the Schema for the Activities API",&#13;
                                "type": "object",&#13;
                                "required": [&#13;
                                    "spec"&#13;
                                ],&#13;
                                "properties": {&#13;
                                    "apiVersion": {&#13;
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",&#13;
                                        "type": "string"&#13;
                                    },&#13;
                                    "kind": {&#13;
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",&#13;
                                        "type": "string"&#13;
                                    },&#13;
                                    "metadata": {&#13;
                                        "type": "object"&#13;
                                    },&#13;
                                    "spec": {&#13;
                                        "description": "ActivitySpec defines the desired state of Activity",&#13;
                                        "type": "object",&#13;
                                        "required": [&#13;
                                            "forProvider"&#13;
                                        ],&#13;
                                        "properties": {&#13;
                                            "deletionPolicy": {&#13;
                                                "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource.",&#13;
                                                "type": "string",&#13;
                                                "default": "Delete",&#13;
                                                "enum": [&#13;
                                                    "Orphan",&#13;
                                                    "Delete"&#13;
                                                ]&#13;
                                            },&#13;
                                            "forProvider": {&#13;
                                                "description": "ActivityParameters defines the desired state of Activity",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name",&#13;
                                                    "region"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "The name of the activity to create. This name must be unique for your AWS account and region for 90 days. For more information, see Limits Related to State Machine Executions (https://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions) in the AWS Step Functions Developer Guide. \n A name must not contain: \n * white space \n * brackets &lt; &gt; { } [ ] \n * wildcard characters ? * \n * special characters \" # % \\ ^ | ~ ` $ &amp; , ; : / \n * control characters (U+0000-001F, U+007F-009F) \n To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "region": {&#13;
                                                        "description": "Region is which region the Activity will be created.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "tags": {&#13;
                                                        "description": "The list of tags to add to a resource. \n An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the AWS Billing and Cost Management User Guide, and Controlling Access Using IAM Tags (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html). \n Tags may only contain Unicode letters, digits, white space, or these symbols: _ . : / = + - @.",&#13;
                                                        "type": "array",&#13;
                                                        "items": {&#13;
                                                            "type": "object",&#13;
                                                            "properties": {&#13;
                                                                "key": {&#13;
                                                                    "type": "string"&#13;
                                                                },&#13;
                                                                "value": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "providerConfigRef": {&#13;
                                                "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",&#13;
                                                "type": "object",&#13;
                                                "default": {&#13;
                                                    "name": "default"&#13;
                                                },&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the referenced object.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "policy": {&#13;
                                                        "description": "Policies for referencing.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "resolution": {&#13;
                                                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                "type": "string",&#13;
                                                                "default": "Required",&#13;
                                                                "enum": [&#13;
                                                                    "Required",&#13;
                                                                    "Optional"&#13;
                                                                ]&#13;
                                                            },&#13;
                                                            "resolve": {&#13;
                                                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                "type": "string",&#13;
                                                                "enum": [&#13;
                                                                    "Always",&#13;
                                                                    "IfNotPresent"&#13;
                                                                ]&#13;
                                                            }&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "providerRef": {&#13;
                                                "description": "ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the referenced object.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "policy": {&#13;
                                                        "description": "Policies for referencing.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "resolution": {&#13;
                                                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                "type": "string",&#13;
                                                                "default": "Required",&#13;
                                                                "enum": [&#13;
                                                                    "Required",&#13;
                                                                    "Optional"&#13;
                                                                ]&#13;
                                                            },&#13;
                                                            "resolve": {&#13;
                                                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                "type": "string",&#13;
                                                                "enum": [&#13;
                                                                    "Always",&#13;
                                                                    "IfNotPresent"&#13;
                                                                ]&#13;
                                                            }&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "publishConnectionDetailsTo": {&#13;
                                                "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "configRef": {&#13;
                                                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",&#13;
                                                        "type": "object",&#13;
                                                        "default": {&#13;
                                                            "name": "default"&#13;
                                                        },&#13;
                                                        "required": [&#13;
                                                            "name"&#13;
                                                        ],&#13;
                                                        "properties": {&#13;
                                                            "name": {&#13;
                                                                "description": "Name of the referenced object.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "policy": {&#13;
                                                                "description": "Policies for referencing.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "resolution": {&#13;
                                                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                        "type": "string",&#13;
                                                                        "default": "Required",&#13;
                                                                        "enum": [&#13;
                                                                            "Required",&#13;
                                                                            "Optional"&#13;
                                                                        ]&#13;
                                                                    },&#13;
                                                                    "resolve": {&#13;
                                                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                        "type": "string",&#13;
                                                                        "enum": [&#13;
                                                                            "Always",&#13;
                                                                            "IfNotPresent"&#13;
                                                                        ]&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "metadata": {&#13;
                                                        "description": "Metadata is the metadata for connection secret.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "annotations": {&#13;
                                                                "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "labels": {&#13;
                                                                "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "type": {&#13;
                                                                "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",&#13;
                                                                "type": "string"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "name": {&#13;
                                                        "description": "Name is the name of the connection secret.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "writeConnectionSecretToRef": {&#13;
                                                "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name",&#13;
                                                    "namespace"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the secret.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "namespace": {&#13;
                                                        "description": "Namespace of the secret.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            }&#13;
                                        }&#13;
                                    },&#13;
                                    "status": {&#13;
                                        "description": "ActivityStatus defines the observed state of Activity.",&#13;
                                        "type": "object",&#13;
                                        "properties": {&#13;
                                            "atProvider": {&#13;
                                                "description": "ActivityObservation defines the observed state of Activity",&#13;
                                                "type": "object",&#13;
                                                "properties": {&#13;
                                                    "activityARN": {&#13;
                                                        "description": "The Amazon Resource Name (ARN) that identifies the created activity.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "creationDate": {&#13;
                                                        "description": "The date the activity is created.",&#13;
                                                        "type": "string",&#13;
                                                        "format": "date-time"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "conditions": {&#13;
                                                "description": "Conditions of the resource.",&#13;
                                                "type": "array",&#13;
                                                "items": {&#13;
                                                    "description": "A Condition that may apply to a resource.",&#13;
                                                    "type": "object",&#13;
                                                    "required": [&#13;
                                                        "lastTransitionTime",&#13;
                                                        "reason",&#13;
                                                        "status",&#13;
                                                        "type"&#13;
                                                    ],&#13;
                                                    "properties": {&#13;
                                                        "lastTransitionTime": {&#13;
                                                            "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",&#13;
                                                            "type": "string",&#13;
                                                            "format": "date-time"&#13;
                                                        },&#13;
                                                        "message": {&#13;
                                                            "description": "A Message containing details about this condition's last transition from one status to another, if any.",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "reason": {&#13;
                                                            "description": "A Reason for this condition's last transition from one status to another.",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "status": {&#13;
                                                            "description": "Status of this condition; is it currently True, False, or Unknown?",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "type": {&#13;
                                                            "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",&#13;
                                                            "type": "string"&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            }&#13;
                                        }&#13;
                                    }&#13;
                                }&#13;
                            }&#13;
                        },&#13;
                        "subresources": {&#13;
                            "status": {}&#13;
                        },&#13;
                        "additionalPrinterColumns": [&#13;
                            {&#13;
                                "name": "READY",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".status.conditions[?(@.type=='Ready')].status"&#13;
                            },&#13;
                            {&#13;
                                "name": "SYNCED",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".status.conditions[?(@.type=='Synced')].status"&#13;
                            },&#13;
                            {&#13;
                                "name": "EXTERNAL-NAME",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"&#13;
                            }&#13;
                        ]&#13;
                    }&#13;
                ],&#13;
                "conversion": {&#13;
                    "strategy": "None"&#13;
                }&#13;
            },&#13;
            "status": {&#13;
                "conditions": [&#13;
                    {&#13;
                        "type": "NamesAccepted",&#13;
                        "status": "True",&#13;
                        "lastTransitionTime": "2023-03-24T15:44:40Z",&#13;
                        "reason": "NoConflicts",&#13;
                        "message": "no conflicts found"&#13;
                    },&#13;
                    {&#13;
                        "type": "Established",&#13;
                        "status": "True",&#13;
                        "lastTransitionTime": "2023-03-24T15:44:42Z",&#13;
                        "reason": "InitialNamesAccepted",&#13;
                        "message": "the initial names have been accepted"&#13;
                    }&#13;
                ],&#13;
                "acceptedNames": {&#13;
                    "plural": "activities",&#13;
                    "singular": "activity",&#13;
                    "kind": "Activity",&#13;
                    "listKind": "ActivityList",&#13;
                    "categories": [&#13;
                        "crossplane",&#13;
                        "managed",&#13;
                        "aws"&#13;
                    ]&#13;
                },&#13;
                "storedVersions": [&#13;
                    "v1alpha1"&#13;
                ]&#13;
            }&#13;
        },&#13;
        {&#13;
            "metadata": {&#13;
                "name": "addons.eks.aws.crossplane.io",&#13;
                "uid": "196e877d-d923-4251-8c8d-a6d237b123e5",&#13;
                "resourceVersion": "12306",&#13;
                "generation": 1,&#13;
                "creationTimestamp": "2023-03-24T15:44:01Z",&#13;
                "annotations": {&#13;
                    "controller-gen.kubebuilder.io/version": "v0.8.0"&#13;
                },&#13;
                "ownerReferences": [&#13;
                    {&#13;
                        "apiVersion": "pkg.crossplane.io/v1",&#13;
                        "kind": "ProviderRevision",&#13;
                        "name": "crossplane-provider-aws-245ce7fb587d",&#13;
                        "uid": "1b69d3a2-2bd9-478e-926c-9774633c918c",&#13;
                        "controller": true,&#13;
                        "blockOwnerDeletion": true&#13;
                    },&#13;
                    {&#13;
                        "apiVersion": "pkg.crossplane.io/v1",&#13;
                        "kind": "Provider",&#13;
                        "name": "crossplane-provider-aws",&#13;
                        "uid": "f9d15608-59ff-498c-a393-01ef8688eb40",&#13;
                        "controller": false,&#13;
                        "blockOwnerDeletion": true&#13;
                    }&#13;
                ],&#13;
                "managedFields": [&#13;
                    {&#13;
                        "manager": "crossplane",&#13;
                        "operation": "Update",&#13;
                        "apiVersion": "apiextensions.k8s.io/v1",&#13;
                        "time": "2023-03-24T15:43:55Z",&#13;
                        "fieldsType": "FieldsV1",&#13;
                        "fieldsV1": {&#13;
                            "f:metadata": {&#13;
                                "f:annotations": {&#13;
                                    ".": {},&#13;
                                    "f:controller-gen.kubebuilder.io/version": {}&#13;
                                },&#13;
                                "f:ownerReferences": {&#13;
                                    ".": {},&#13;
                                    "k:{\"uid\":\"1b69d3a2-2bd9-478e-926c-9774633c918c\"}": {},&#13;
                                    "k:{\"uid\":\"f9d15608-59ff-498c-a393-01ef8688eb40\"}": {}&#13;
                                }&#13;
                            },&#13;
                            "f:spec": {&#13;
                                "f:conversion": {&#13;
                                    ".": {},&#13;
                                    "f:strategy": {}&#13;
                                },&#13;
                                "f:group": {},&#13;
                                "f:names": {&#13;
                                    "f:categories": {},&#13;
                                    "f:kind": {},&#13;
                                    "f:listKind": {},&#13;
                                    "f:plural": {},&#13;
                                    "f:singular": {}&#13;
                                },&#13;
                                "f:scope": {},&#13;
                                "f:versions": {}&#13;
                            }&#13;
                        }&#13;
                    },&#13;
                    {&#13;
                        "manager": "kube-apiserver",&#13;
                        "operation": "Update",&#13;
                        "apiVersion": "apiextensions.k8s.io/v1",&#13;
                        "time": "2023-03-24T15:44:22Z",&#13;
                        "fieldsType": "FieldsV1",&#13;
                        "fieldsV1": {&#13;
                            "f:status": {&#13;
                                "f:acceptedNames": {&#13;
                                    "f:categories": {},&#13;
                                    "f:kind": {},&#13;
                                    "f:listKind": {},&#13;
                                    "f:plural": {},&#13;
                                    "f:singular": {}&#13;
                                },&#13;
                                "f:conditions": {&#13;
                                    "k:{\"type\":\"Established\"}": {&#13;
                                        ".": {},&#13;
                                        "f:lastTransitionTime": {},&#13;
                                        "f:message": {},&#13;
                                        "f:reason": {},&#13;
                                        "f:status": {},&#13;
                                        "f:type": {}&#13;
                                    },&#13;
                                    "k:{\"type\":\"NamesAccepted\"}": {&#13;
                                        ".": {},&#13;
                                        "f:lastTransitionTime": {},&#13;
                                        "f:message": {},&#13;
                                        "f:reason": {},&#13;
                                        "f:status": {},&#13;
                                        "f:type": {}&#13;
                                    }&#13;
                                }&#13;
                            }&#13;
                        },&#13;
                        "subresource": "status"&#13;
                    }&#13;
                ]&#13;
            },&#13;
            "spec": {&#13;
                "group": "eks.aws.crossplane.io",&#13;
                "names": {&#13;
                    "plural": "addons",&#13;
                    "singular": "addon",&#13;
                    "kind": "Addon",&#13;
                    "listKind": "AddonList",&#13;
                    "categories": [&#13;
                        "crossplane",&#13;
                        "managed",&#13;
                        "aws"&#13;
                    ]&#13;
                },&#13;
                "scope": "Cluster",&#13;
                "versions": [&#13;
                    {&#13;
                        "name": "v1alpha1",&#13;
                        "served": true,&#13;
                        "storage": true,&#13;
                        "schema": {&#13;
                            "openAPIV3Schema": {&#13;
                                "description": "Addon is the Schema for the Addons API",&#13;
                                "type": "object",&#13;
                                "required": [&#13;
                                    "spec"&#13;
                                ],&#13;
                                "properties": {&#13;
                                    "apiVersion": {&#13;
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",&#13;
                                        "type": "string"&#13;
                                    },&#13;
                                    "kind": {&#13;
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",&#13;
                                        "type": "string"&#13;
                                    },&#13;
                                    "metadata": {&#13;
                                        "type": "object"&#13;
                                    },&#13;
                                    "spec": {&#13;
                                        "description": "AddonSpec defines the desired state of Addon",&#13;
                                        "type": "object",&#13;
                                        "required": [&#13;
                                            "forProvider"&#13;
                                        ],&#13;
                                        "properties": {&#13;
                                            "deletionPolicy": {&#13;
                                                "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource.",&#13;
                                                "type": "string",&#13;
                                                "default": "Delete",&#13;
                                                "enum": [&#13;
                                                    "Orphan",&#13;
                                                    "Delete"&#13;
                                                ]&#13;
                                            },&#13;
                                            "forProvider": {&#13;
                                                "description": "AddonParameters defines the desired state of Addon",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "addonName",&#13;
                                                    "region"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "addonName": {&#13;
                                                        "description": "The name of the add-on. The name must match one of the names returned by DescribeAddonVersions (https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html).",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "addonVersion": {&#13;
                                                        "description": "The version of the add-on. The version must match one of the versions returned by DescribeAddonVersions (https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html).",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "clusterName": {&#13;
                                                        "description": "The name of the cluster to create the add-on for.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "clusterNameRef": {&#13;
                                                        "description": "ClusterNameRef is a reference to a Cluster used to set the ClusterName.",&#13;
                                                        "type": "object",&#13;
                                                        "required": [&#13;
                                                            "name"&#13;
                                                        ],&#13;
                                                        "properties": {&#13;
                                                            "name": {&#13;
                                                                "description": "Name of the referenced object.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "policy": {&#13;
                                                                "description": "Policies for referencing.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "resolution": {&#13;
                                                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                        "type": "string",&#13;
                                                                        "default": "Required",&#13;
                                                                        "enum": [&#13;
                                                                            "Required",&#13;
                                                                            "Optional"&#13;
                                                                        ]&#13;
                                                                    },&#13;
                                                                    "resolve": {&#13;
                                                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                        "type": "string",&#13;
                                                                        "enum": [&#13;
                                                                            "Always",&#13;
                                                                            "IfNotPresent"&#13;
                                                                        ]&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "clusterNameSelector": {&#13;
                                                        "description": "ClusterNameSelector selects references to a Cluster used to set the ClusterName.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "matchControllerRef": {&#13;
                                                                "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",&#13;
                                                                "type": "boolean"&#13;
                                                            },&#13;
                                                            "matchLabels": {&#13;
                                                                "description": "MatchLabels ensures an object with matching labels is selected.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "policy": {&#13;
                                                                "description": "Policies for selection.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "resolution": {&#13;
                                                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                        "type": "string",&#13;
                                                                        "default": "Required",&#13;
                                                                        "enum": [&#13;
                                                                            "Required",&#13;
                                                                            "Optional"&#13;
                                                                        ]&#13;
                                                                    },&#13;
                                                                    "resolve": {&#13;
                                                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                        "type": "string",&#13;
                                                                        "enum": [&#13;
                                                                            "Always",&#13;
                                                                            "IfNotPresent"&#13;
                                                                        ]&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "region": {&#13;
                                                        "description": "Region is which region the Addon will be created.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "resolveConflicts": {&#13;
                                                        "description": "How to resolve parameter value conflicts when migrating an existing add-on to an Amazon EKS add-on.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "serviceAccountRoleARN": {&#13;
                                                        "description": "The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see Amazon EKS node IAM role (https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html) in the Amazon EKS User Guide. \n To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see Enabling IAM roles for service accounts on your cluster (https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html) in the Amazon EKS User Guide.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "tags": {&#13;
                                                        "description": "The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define.",&#13;
                                                        "type": "object",&#13;
                                                        "additionalProperties": {&#13;
                                                            "type": "string"&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "providerConfigRef": {&#13;
                                                "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",&#13;
                                                "type": "object",&#13;
                                                "default": {&#13;
                                                    "name": "default"&#13;
                                                },&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the referenced object.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "policy": {&#13;
                                                        "description": "Policies for referencing.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "resolution": {&#13;
                                                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                "type": "string",&#13;
                                                                "default": "Required",&#13;
                                                                "enum": [&#13;
                                                                    "Required",&#13;
                                                                    "Optional"&#13;
                                                                ]&#13;
                                                            },&#13;
                                                            "resolve": {&#13;
                                                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                "type": "string",&#13;
                                                                "enum": [&#13;
                                                                    "Always",&#13;
                                                                    "IfNotPresent"&#13;
                                                                ]&#13;
                                                            }&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "providerRef": {&#13;
                                                "description": "ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the referenced object.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "policy": {&#13;
                                                        "description": "Policies for referencing.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "resolution": {&#13;
                                                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                "type": "string",&#13;
                                                                "default": "Required",&#13;
                                                                "enum": [&#13;
                                                                    "Required",&#13;
                                                                    "Optional"&#13;
                                                                ]&#13;
                                                            },&#13;
                                                            "resolve": {&#13;
                                                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                "type": "string",&#13;
                                                                "enum": [&#13;
                                                                    "Always",&#13;
                                                                    "IfNotPresent"&#13;
                                                                ]&#13;
                                                            }&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "publishConnectionDetailsTo": {&#13;
                                                "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "configRef": {&#13;
                                                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",&#13;
                                                        "type": "object",&#13;
                                                        "default": {&#13;
                                                            "name": "default"&#13;
                                                        },&#13;
                                                        "required": [&#13;
                                                            "name"&#13;
                                                        ],&#13;
                                                        "properties": {&#13;
                                                            "name": {&#13;
                                                                "description": "Name of the referenced object.",&#13;
                                                                "type": "string"&#13;
                                                            },&#13;
                                                            "policy": {&#13;
                                                                "description": "Policies for referencing.",&#13;
                                                                "type": "object",&#13;
                                                                "properties": {&#13;
                                                                    "resolution": {&#13;
                                                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",&#13;
                                                                        "type": "string",&#13;
                                                                        "default": "Required",&#13;
                                                                        "enum": [&#13;
                                                                            "Required",&#13;
                                                                            "Optional"&#13;
                                                                        ]&#13;
                                                                    },&#13;
                                                                    "resolve": {&#13;
                                                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",&#13;
                                                                        "type": "string",&#13;
                                                                        "enum": [&#13;
                                                                            "Always",&#13;
                                                                            "IfNotPresent"&#13;
                                                                        ]&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "metadata": {&#13;
                                                        "description": "Metadata is the metadata for connection secret.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "annotations": {&#13;
                                                                "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "labels": {&#13;
                                                                "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "type": {&#13;
                                                                "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",&#13;
                                                                "type": "string"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "name": {&#13;
                                                        "description": "Name is the name of the connection secret.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "writeConnectionSecretToRef": {&#13;
                                                "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name",&#13;
                                                    "namespace"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the secret.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "namespace": {&#13;
                                                        "description": "Namespace of the secret.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            }&#13;
                                        }&#13;
                                    },&#13;
                                    "status": {&#13;
                                        "description": "AddonStatus defines the observed state of Addon.",&#13;
                                        "type": "object",&#13;
                                        "properties": {&#13;
                                            "atProvider": {&#13;
                                                "description": "AddonObservation defines the observed state of Addon",&#13;
                                                "type": "object",&#13;
                                                "properties": {&#13;
                                                    "addonARN": {&#13;
                                                        "description": "The Amazon Resource Name (ARN) of the add-on.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "clusterName": {&#13;
                                                        "description": "The name of the cluster.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "createdAt": {&#13;
                                                        "description": "The date and time that the add-on was created.",&#13;
                                                        "type": "string",&#13;
                                                        "format": "date-time"&#13;
                                                    },&#13;
                                                    "health": {&#13;
                                                        "description": "An object that represents the health of the add-on.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "issues": {&#13;
                                                                "type": "array",&#13;
                                                                "items": {&#13;
                                                                    "type": "object",&#13;
                                                                    "properties": {&#13;
                                                                        "code": {&#13;
                                                                            "type": "string"&#13;
                                                                        },&#13;
                                                                        "message": {&#13;
                                                                            "type": "string"&#13;
                                                                        },&#13;
                                                                        "resourceIDs": {&#13;
                                                                            "type": "array",&#13;
                                                                            "items": {&#13;
                                                                                "type": "string"&#13;
                                                                            }&#13;
                                                                        }&#13;
                                                                    }&#13;
                                                                }&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "modifiedAt": {&#13;
                                                        "description": "The date and time that the add-on was last modified.",&#13;
                                                        "type": "string",&#13;
                                                        "format": "date-time"&#13;
                                                    },&#13;
                                                    "status": {&#13;
                                                        "description": "The status of the add-on.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "conditions": {&#13;
                                                "description": "Conditions of the resource.",&#13;
                                                "type": "array",&#13;
                                                "items": {&#13;
                                                    "description": "A Condition that may apply to a resource.",&#13;
                                                    "type": "object",&#13;
                                                    "required": [&#13;
                                                        "lastTransitionTime",&#13;
                                                        "reason",&#13;
                                                        "status",&#13;
                                                        "type"&#13;
                                                    ],&#13;
                                                    "properties": {&#13;
                                                        "lastTransitionTime": {&#13;
                                                            "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",&#13;
                                                            "type": "string",&#13;
                                                            "format": "date-time"&#13;
                                                        },&#13;
                                                        "message": {&#13;
                                                            "description": "A Message containing details about this condition's last transition from one status to another, if any.",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "reason": {&#13;
                                                            "description": "A Reason for this condition's last transition from one status to another.",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "status": {&#13;
                                                            "description": "Status of this condition; is it currently True, False, or Unknown?",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "type": {&#13;
                                                            "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",&#13;
                                                            "type": "string"&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            }&#13;
                                        }&#13;
                                    }&#13;
                                }&#13;
                            }&#13;
                        },&#13;
                        "subresources": {&#13;
                            "status": {}&#13;
                        },&#13;
                        "additionalPrinterColumns": [&#13;
                            {&#13;
                                "name": "READY",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".status.conditions[?(@.type=='Ready')].status"&#13;
                            },&#13;
                            {&#13;
                                "name": "SYNCED",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".status.conditions[?(@.type=='Synced')].status"&#13;
                            },&#13;
                            {&#13;
                                "name": "EXTERNAL-NAME",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"&#13;
                            }&#13;
                        ]&#13;
                    }&#13;
                ],&#13;
                "conversion": {&#13;
                    "strategy": "None"&#13;
                }&#13;
            },&#13;
            "status": {&#13;
                "conditions": [&#13;
                    {&#13;
                        "type": "NamesAccepted",&#13;
                        "status": "True",&#13;
                        "lastTransitionTime": "2023-03-24T15:44:22Z",&#13;
                        "reason": "NoConflicts",&#13;
                        "message": "no conflicts found"&#13;
                    },&#13;
                    {&#13;
                        "type": "Established",&#13;
                        "status": "True",&#13;
                        "lastTransitionTime": "2023-03-24T15:44:24Z",&#13;
                        "reason": "InitialNamesAccepted",&#13;
                        "message": "the initial names have been accepted"&#13;
                    }&#13;
                ],&#13;
                "acceptedNames": {&#13;
                    "plural": "addons",&#13;
                    "singular": "addon",&#13;
                    "kind": "Addon",&#13;
                    "listKind": "AddonList",&#13;
                    "categories": [&#13;
                        "crossplane",&#13;
                        "managed",&#13;
                        "aws"&#13;
                    ]&#13;
                },&#13;
                "storedVersions": [&#13;
                    "v1alpha1"&#13;
                ]&#13;
            }&#13;
        },&#13;
        {&#13;
            "metadata": {&#13;
                "name": "containers.storage.azure.crossplane.io",&#13;
                "uid": "8918cf40-52ca-4a03-8a8f-b5bf98c3e3e1",&#13;
                "resourceVersion": "3260600",&#13;
                "generation": 1,&#13;
                "creationTimestamp": "2023-03-28T14:02:36Z",&#13;
                "annotations": {&#13;
                    "controller-gen.kubebuilder.io/version": "v0.8.0"&#13;
                },&#13;
                "ownerReferences": [&#13;
                    {&#13;
                        "apiVersion": "pkg.crossplane.io/v1",&#13;
                        "kind": "ProviderRevision",&#13;
                        "name": "crossplane-provider-azure-4e71f9c5dcc1",&#13;
                        "uid": "d7720a50-3fe3-4a36-8898-c030066feb90",&#13;
                        "controller": true,&#13;
                        "blockOwnerDeletion": true&#13;
                    },&#13;
                    {&#13;
                        "apiVersion": "pkg.crossplane.io/v1",&#13;
                        "kind": "Provider",&#13;
                        "name": "crossplane-provider-azure",&#13;
                        "uid": "d63c3976-c221-4d84-8a2e-b2dad4547d17",&#13;
                        "controller": false,&#13;
                        "blockOwnerDeletion": true&#13;
                    }&#13;
                ],&#13;
                "managedFields": [&#13;
                    {&#13;
                        "manager": "crossplane",&#13;
                        "operation": "Update",&#13;
                        "apiVersion": "apiextensions.k8s.io/v1",&#13;
                        "time": "2023-03-28T14:02:35Z",&#13;
                        "fieldsType": "FieldsV1",&#13;
                        "fieldsV1": {&#13;
                            "f:metadata": {&#13;
                                "f:annotations": {&#13;
                                    ".": {},&#13;
                                    "f:controller-gen.kubebuilder.io/version": {}&#13;
                                },&#13;
                                "f:ownerReferences": {&#13;
                                    ".": {},&#13;
                                    "k:{\"uid\":\"d63c3976-c221-4d84-8a2e-b2dad4547d17\"}": {},&#13;
                                    "k:{\"uid\":\"d7720a50-3fe3-4a36-8898-c030066feb90\"}": {}&#13;
                                }&#13;
                            },&#13;
                            "f:spec": {&#13;
                                "f:conversion": {&#13;
                                    ".": {},&#13;
                                    "f:strategy": {}&#13;
                                },&#13;
                                "f:group": {},&#13;
                                "f:names": {&#13;
                                    "f:categories": {},&#13;
                                    "f:kind": {},&#13;
                                    "f:listKind": {},&#13;
                                    "f:plural": {},&#13;
                                    "f:singular": {}&#13;
                                },&#13;
                                "f:scope": {},&#13;
                                "f:versions": {}&#13;
                            }&#13;
                        }&#13;
                    },&#13;
                    {&#13;
                        "manager": "kube-apiserver",&#13;
                        "operation": "Update",&#13;
                        "apiVersion": "apiextensions.k8s.io/v1",&#13;
                        "time": "2023-03-28T14:02:36Z",&#13;
                        "fieldsType": "FieldsV1",&#13;
                        "fieldsV1": {&#13;
                            "f:status": {&#13;
                                "f:acceptedNames": {&#13;
                                    "f:categories": {},&#13;
                                    "f:kind": {},&#13;
                                    "f:listKind": {},&#13;
                                    "f:plural": {},&#13;
                                    "f:singular": {}&#13;
                                },&#13;
                                "f:conditions": {&#13;
                                    "k:{\"type\":\"Established\"}": {&#13;
                                        ".": {},&#13;
                                        "f:lastTransitionTime": {},&#13;
                                        "f:message": {},&#13;
                                        "f:reason": {},&#13;
                                        "f:status": {},&#13;
                                        "f:type": {}&#13;
                                    },&#13;
                                    "k:{\"type\":\"NamesAccepted\"}": {&#13;
                                        ".": {},&#13;
                                        "f:lastTransitionTime": {},&#13;
                                        "f:message": {},&#13;
                                        "f:reason": {},&#13;
                                        "f:status": {},&#13;
                                        "f:type": {}&#13;
                                    }&#13;
                                }&#13;
                            }&#13;
                        },&#13;
                        "subresource": "status"&#13;
                    }&#13;
                ]&#13;
            },&#13;
            "spec": {&#13;
                "group": "storage.azure.crossplane.io",&#13;
                "names": {&#13;
                    "plural": "containers",&#13;
                    "singular": "container",&#13;
                    "kind": "Container",&#13;
                    "listKind": "ContainerList",&#13;
                    "categories": [&#13;
                        "crossplane",&#13;
                        "managed",&#13;
                        "azure"&#13;
                    ]&#13;
                },&#13;
                "scope": "Cluster",&#13;
                "versions": [&#13;
                    {&#13;
                        "name": "v1alpha3",&#13;
                        "served": true,&#13;
                        "storage": true,&#13;
                        "schema": {&#13;
                            "openAPIV3Schema": {&#13;
                                "description": "A Container is a managed resource that represents an Azure Blob Storage Container.",&#13;
                                "type": "object",&#13;
                                "required": [&#13;
                                    "spec"&#13;
                                ],&#13;
                                "properties": {&#13;
                                    "apiVersion": {&#13;
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",&#13;
                                        "type": "string"&#13;
                                    },&#13;
                                    "kind": {&#13;
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",&#13;
                                        "type": "string"&#13;
                                    },&#13;
                                    "metadata": {&#13;
                                        "type": "object"&#13;
                                    },&#13;
                                    "spec": {&#13;
                                        "description": "A ContainerSpec defines the desired state of a Container.",&#13;
                                        "type": "object",&#13;
                                        "properties": {&#13;
                                            "deletionPolicy": {&#13;
                                                "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource.",&#13;
                                                "type": "string",&#13;
                                                "default": "Delete",&#13;
                                                "enum": [&#13;
                                                    "Orphan",&#13;
                                                    "Delete"&#13;
                                                ]&#13;
                                            },&#13;
                                            "metadata": {&#13;
                                                "description": "Metadata for this Container.",&#13;
                                                "type": "object",&#13;
                                                "additionalProperties": {&#13;
                                                    "type": "string"&#13;
                                                }&#13;
                                            },&#13;
                                            "providerConfigRef": {&#13;
                                                "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",&#13;
                                                "type": "object",&#13;
                                                "default": {&#13;
                                                    "name": "default"&#13;
                                                },&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the referenced object.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "providerRef": {&#13;
                                                "description": "ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the referenced object.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "publicAccessType": {&#13;
                                                "description": "PublicAccessType for this container; either \"blob\" or \"container\".",&#13;
                                                "type": "string"&#13;
                                            },&#13;
                                            "publishConnectionDetailsTo": {&#13;
                                                "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "configRef": {&#13;
                                                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",&#13;
                                                        "type": "object",&#13;
                                                        "default": {&#13;
                                                            "name": "default"&#13;
                                                        },&#13;
                                                        "required": [&#13;
                                                            "name"&#13;
                                                        ],&#13;
                                                        "properties": {&#13;
                                                            "name": {&#13;
                                                                "description": "Name of the referenced object.",&#13;
                                                                "type": "string"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "metadata": {&#13;
                                                        "description": "Metadata is the metadata for connection secret.",&#13;
                                                        "type": "object",&#13;
                                                        "properties": {&#13;
                                                            "annotations": {&#13;
                                                                "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "labels": {&#13;
                                                                "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",&#13;
                                                                "type": "object",&#13;
                                                                "additionalProperties": {&#13;
                                                                    "type": "string"&#13;
                                                                }&#13;
                                                            },&#13;
                                                            "type": {&#13;
                                                                "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",&#13;
                                                                "type": "string"&#13;
                                                            }&#13;
                                                        }&#13;
                                                    },&#13;
                                                    "name": {&#13;
                                                        "description": "Name is the name of the connection secret.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            },&#13;
                                            "writeConnectionSecretToRef": {&#13;
                                                "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",&#13;
                                                "type": "object",&#13;
                                                "required": [&#13;
                                                    "name",&#13;
                                                    "namespace"&#13;
                                                ],&#13;
                                                "properties": {&#13;
                                                    "name": {&#13;
                                                        "description": "Name of the secret.",&#13;
                                                        "type": "string"&#13;
                                                    },&#13;
                                                    "namespace": {&#13;
                                                        "description": "Namespace of the secret.",&#13;
                                                        "type": "string"&#13;
                                                    }&#13;
                                                }&#13;
                                            }&#13;
                                        }&#13;
                                    },&#13;
                                    "status": {&#13;
                                        "description": "A ContainerStatus represents the observed status of a Container.",&#13;
                                        "type": "object",&#13;
                                        "properties": {&#13;
                                            "conditions": {&#13;
                                                "description": "Conditions of the resource.",&#13;
                                                "type": "array",&#13;
                                                "items": {&#13;
                                                    "description": "A Condition that may apply to a resource.",&#13;
                                                    "type": "object",&#13;
                                                    "required": [&#13;
                                                        "lastTransitionTime",&#13;
                                                        "reason",&#13;
                                                        "status",&#13;
                                                        "type"&#13;
                                                    ],&#13;
                                                    "properties": {&#13;
                                                        "lastTransitionTime": {&#13;
                                                            "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",&#13;
                                                            "type": "string",&#13;
                                                            "format": "date-time"&#13;
                                                        },&#13;
                                                        "message": {&#13;
                                                            "description": "A Message containing details about this condition's last transition from one status to another, if any.",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "reason": {&#13;
                                                            "description": "A Reason for this condition's last transition from one status to another.",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "status": {&#13;
                                                            "description": "Status of this condition; is it currently True, False, or Unknown?",&#13;
                                                            "type": "string"&#13;
                                                        },&#13;
                                                        "type": {&#13;
                                                            "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",&#13;
                                                            "type": "string"&#13;
                                                        }&#13;
                                                    }&#13;
                                                }&#13;
                                            }&#13;
                                        }&#13;
                                    }&#13;
                                }&#13;
                            }&#13;
                        },&#13;
                        "subresources": {&#13;
                            "status": {}&#13;
                        },&#13;
                        "additionalPrinterColumns": [&#13;
                            {&#13;
                                "name": "READY",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".status.conditions[?(@.type=='Ready')].status"&#13;
                            },&#13;
                            {&#13;
                                "name": "SYNCED",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".status.conditions[?(@.type=='Synced')].status"&#13;
                            },&#13;
                            {&#13;
                                "name": "STORAGE_ACCOUNT",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".spec.accountRef.name"&#13;
                            },&#13;
                            {&#13;
                                "name": "PUBLIC_ACCESS_TYPE",&#13;
                                "type": "string",&#13;
                                "jsonPath": ".spec.publicAccessType"&#13;
                            },&#13;
                            {&#13;
                                "name": "AGE",&#13;
                                "type": "date",&#13;
                                "jsonPath": ".metadata.creationTimestamp"&#13;
                            }&#13;
                        ]&#13;
                    }&#13;
                ],&#13;
                "conversion": {&#13;
                    "strategy": "None"&#13;
                }&#13;
            },&#13;
            "status": {&#13;
                "conditions": [&#13;
                    {&#13;
                        "type": "NamesAccepted",&#13;
                        "status": "True",&#13;
                        "lastTransitionTime": "2023-03-28T14:02:36Z",&#13;
                        "reason": "NoConflicts",&#13;
                        "message": "no conflicts found"&#13;
                    },&#13;
                    {&#13;
                        "type": "Established",&#13;
                        "status": "True",&#13;
                        "lastTransitionTime": "2023-03-28T14:02:36Z",&#13;
                        "reason": "InitialNamesAccepted",&#13;
                        "message": "the initial names have been accepted"&#13;
                    }&#13;
                ],&#13;
                "acceptedNames": {&#13;
                    "plural": "containers",&#13;
                    "singular": "container",&#13;
                    "kind": "Container",&#13;
                    "listKind": "ContainerList",&#13;
                    "categories": [&#13;
                        "crossplane",&#13;
                        "managed",&#13;
                        "azure"&#13;
                    ]&#13;
                },&#13;
                "storedVersions": [&#13;
                    "v1alpha3"&#13;
                ]&#13;
            }&#13;
        }&#13;
    ]&#13;
}</value>
        <write_roles/>
    </sys_properties>
    <sys_translated_text action="delete_multiple" query="documentkey=9df7fab1975121108ba1bde3f153afd3"/>
</record_update>
